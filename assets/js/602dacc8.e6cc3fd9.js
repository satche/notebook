"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[6314],{5734:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var t=i(4848),r=i(8453);const s={aliases:["Containerization","VM","Virtual Machines"],tags:[]},o="Virtualization",a={id:"engineering/devops/virtualization",title:"Virtualization",description:"Hypervisor",source:"@site/docs/engineering/devops/virtualization.md",sourceDirName:"engineering/devops",slug:"/engineering/devops/virtualization",permalink:"/notebook/engineering/devops/virtualization",draft:!1,unlisted:!1,editUrl:"https://github.com/satche/notebook/tree/main/docs/engineering/devops/virtualization.md",tags:[],version:"current",lastUpdatedAt:1721721519e3,frontMatter:{aliases:["Containerization","VM","Virtual Machines"],tags:[]},sidebar:"engineeringSidebar",previous:{title:"Unit testing",permalink:"/notebook/engineering/devops/unit-testing"},next:{title:"Engineering",permalink:"/notebook/engineering/"}},l={},c=[{value:"Hypervisor",id:"hypervisor",level:2},{value:"Virtual Machines",id:"virtual-machines",level:2},{value:"Containerization",id:"containerization",level:2}];function h(e){const n={a:"a",h1:"h1",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"virtualization",children:"Virtualization"}),"\n",(0,t.jsx)(n.h2,{id:"hypervisor",children:"Hypervisor"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://wikipedia.org/wiki/hypervisor",children:"Hypervisor"})," is the piece of software that runs virtual machines. It allows to run several OS on a single physical machine. It's typically responsible to allocate resources and provide interface between the guest (the VM) and the host."]}),"\n",(0,t.jsx)(n.p,{children:"There is two types of hypervisor:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Type-1: Native / Bare-metal"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Hardware virtualization"}),"\n",(0,t.jsx)(n.li,{children:"Sits between hardware and the VM"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Type-2: Hosted"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Software virtualization"}),"\n",(0,t.jsx)(n.li,{children:"Sits on top of the host's OS"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"virtual-machines",children:"Virtual Machines"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/notebook/engineering/devops/glossary/pet-vs-cattle#pets",children:"Pets"})," type"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"containerization",children:"Containerization"}),"\n",(0,t.jsxs)(n.p,{children:["Containers is the principle to run processes, like applications, in an isolated environment. We call that ",(0,t.jsx)(n.a,{href:"https://wikipedia.org/wiki/os-level_virtualization",children:"OS-level virtualization"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Some characteristics:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Lightweight and serverless: allow for fast build and deployment"}),"\n",(0,t.jsx)(n.li,{children:"Don't have to embark an all OS"}),"\n",(0,t.jsx)(n.li,{children:"Run natively on the machine"}),"\n",(0,t.jsx)(n.li,{children:"Good for reproducibility, consistency and scaling"}),"\n",(0,t.jsx)(n.li,{children:"Isolation at process level (less secure than VMs)"}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/notebook/engineering/devops/glossary/pet-vs-cattle#cattle",children:"Cattle"})," type"]}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>a});var t=i(6540);const r={},s=t.createContext(r);function o(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);