"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[2834],{1068:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>t,metadata:()=>l,toc:()=>o});var i=s(4848),r=s(8453);const t={aliases:["REST","RESTful"],tags:[]},c="API",l={id:"engineering/architecture/styles/api",title:"API",description:"Application Programming Interface (API) is a way for two or more applications/programs to communicate with each other.",source:"@site/docs/engineering/architecture/styles/api.md",sourceDirName:"engineering/architecture/styles",slug:"/engineering/architecture/styles/api",permalink:"/notebook/engineering/architecture/styles/api",draft:!1,unlisted:!1,editUrl:"https://github.com/satche/notebook/tree/main/docs/engineering/architecture/styles/api.md",tags:[],version:"current",lastUpdatedAt:1721721519e3,frontMatter:{aliases:["REST","RESTful"],tags:[]},sidebar:"engineeringSidebar",previous:{title:"Testability",permalink:"/notebook/engineering/architecture/quality-attributes/testability"},next:{title:"Client-server",permalink:"/notebook/engineering/architecture/styles/client-server"}},a={},o=[{value:"Types",id:"types",level:2},{value:"Protocols and architectures",id:"protocols-and-architectures",level:2},{value:"REST",id:"rest",level:3},{value:"Constraints",id:"constraints",level:4},{value:"Resources",id:"resources",level:4},{value:"SOAP",id:"soap",level:3},{value:"RPC",id:"rpc",level:3},{value:"Resources",id:"resources-1",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"api",children:"API"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://wikipedia.org/wiki/api",children:"Application Programming Interface"})," (API) is a way for two or more applications/programs to communicate with each other."]}),"\n",(0,i.jsx)(n.p,{children:"With APIs, an application can easily be accessed via multiple canals: web interface, CLI, scripts, etc."}),"\n",(0,i.jsxs)(n.p,{children:["For example, in a ",(0,i.jsx)(n.a,{href:"/notebook/engineering/architecture/styles/service-oriented",children:"service-oriented"})," architecture, web services are a type of API which use the internet as network."]}),"\n",(0,i.jsx)(n.h2,{id:"types",children:"Types"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Open APIs"}),": publicly available, anyone can access it"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Partner APIs"}),": used to collaborate between business entities"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Internal APIs"}),": private APIs, not exposed on a public network (or, at all)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Composite APIs"}),": combination of different data and services APIs"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"protocols-and-architectures",children:"Protocols and architectures"}),"\n",(0,i.jsx)(n.h3,{id:"rest",children:"REST"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://wikipedia.org/wiki/representational_state_transfer",children:"Representational state transfer"})," (REST) define constraints and standards to assure data consistency in web applications, especially APIs."]}),"\n",(0,i.jsx)(n.h4,{id:"constraints",children:"Constraints"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/notebook/engineering/architecture/styles/client-server",children:"Client-server"})}),": enforces the separation of concerns between the UI and the data."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/notebook/engineering/infrastructure/network/protocols#statless-/-stateful",children:"Stateless"})}),": no session is stored by the server, the client's request contains all information necessary to fulfill it."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cache"}),": response is labeled has cacheable (or not), so the client can reuse it."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/notebook/engineering/architecture/styles/layered",children:"Layers"})}),": client doesn't know if it's connected to the end-server or middlewares."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Code on demand"})," (optional): extend or customize functionality of client by transferring code"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Uniformity"}),": 4 constraints ensure a uniform interface","\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:"Identification of resources"}),", in a clear and unique fashion"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:"Manipulation of resources"}),", by the use of representations"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:"Self-descriptive messages"}),", by providing exhaustive information"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:(0,i.jsx)(n.a,{href:"https://wikipedia.org/wiki/hateoas",children:"HATEOAS"})}),", to dynamically serve and discover related resources"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"resources",children:"Resources"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Usually in JSON or XML format"}),"\n",(0,i.jsxs)(n.li,{children:["Can be\u2026","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Static (post, article, \u2026)"}),"\n",(0,i.jsx)(n.li,{children:"Dynamic (weather data, satellites, \u2026)"}),"\n",(0,i.jsx)(n.li,{children:"Intangible (stock prices, \u2026)"}),"\n",(0,i.jsx)(n.li,{children:"Material (vending machine, dispenser,\xa0\u2026)"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["URL access","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Nested: ",(0,i.jsx)(n.code,{children:"GET Nested: GET /api/posts/10/comments"})]}),"\n",(0,i.jsx)(n.li,{children:"Flat: `GET /api/comments?postID=10``"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"soap",children:"SOAP"}),"\n",(0,i.jsx)(n.p,{children:"(WIP)"}),"\n",(0,i.jsx)(n.h3,{id:"rpc",children:"RPC"}),"\n",(0,i.jsx)(n.p,{children:"(WIP)"}),"\n",(0,i.jsx)(n.h2,{id:"resources-1",children:"Resources"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://standards.rest/",children:"standards.rest"})," \u2013 Collection of specifications for REST APIs"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>l});var i=s(6540);const r={},t=i.createContext(r);function c(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);