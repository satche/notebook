"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[4282],{5767:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var o=t(4848),s=t(8453);const r={aliases:[],tags:[]},i="Docker",c={id:"code/tools/docker",title:"Docker",description:"Docker) is a containerization tool",source:"@site/docs/code/tools/docker.md",sourceDirName:"code/tools",slug:"/code/tools/docker",permalink:"/notebook/code/tools/docker",draft:!1,unlisted:!1,editUrl:"https://github.com/satche/notebook/tree/main/docs/code/tools/docker.md",tags:[],version:"current",lastUpdatedAt:1721721519e3,frontMatter:{aliases:[],tags:[]},sidebar:"codeSidebar",previous:{title:"Ansible",permalink:"/notebook/code/tools/ansible"},next:{title:"Kubernetes",permalink:"/notebook/code/tools/kubernetes"}},a={},l=[{value:"Commands",id:"commands",level:2},{value:"Dockerfile",id:"dockerfile",level:2},{value:"Multi-stage",id:"multi-stage",level:3},{value:"Tips &amp; tricks",id:"tips--tricks",level:3},{value:"Docker-compose",id:"docker-compose",level:2},{value:"Swarm",id:"swarm",level:3},{value:"Resources",id:"resources",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"docker",children:"Docker"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.a,{href:"https://wikipedia.org/wiki/docker_(software)",children:"Docker"})," is a containerization tool"]}),"\n",(0,o.jsx)(n.h2,{id:"commands",children:"Commands"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"$ docker ps -s     # overview of running containers\n$ docker system df # show docker disk usage\n"})}),"\n",(0,o.jsx)(n.h2,{id:"dockerfile",children:"Dockerfile"}),"\n",(0,o.jsxs)(n.p,{children:["An image docker is composed of single ",(0,o.jsx)(n.code,{children:"DockerFile"}),", which consist of a series of layers. Most of them are read-only, but some are writable and deleted with the container."]}),"\n",(0,o.jsx)(n.p,{children:"Each instruction in the file creates a layer."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-Dockerfile",children:"FROM ubuntu:18.04\nCOPY . /app\nRUN make /app\nCMD python /app/app.py\n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"FROM"})," creates a layer from the Docker image."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"COPY"})," adds files from your Docker client\u2019s current directory."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"RUN"})," instructions are executed at build (",(0,o.jsx)(n.code,{children:"docker build"}),"). There can be multiple."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"CDM"})," instruction is executed when container start (",(0,o.jsx)(n.code,{children:"docker run"}),"). There can be only one."]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"After an image is build, the layers are cached. When a layer changes, all subsequent layers are created from scratch. Start with steps that change less frequently."}),"\n",(0,o.jsx)(n.h3,{id:"multi-stage",children:"Multi-stage"}),"\n",(0,o.jsx)(n.p,{children:"Name stages to have more control on orchestration."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-dockerfile",children:'# Build base\nFROM node:16-alpine AS base\nRUN apk add --update graphicsmagick\n\n# Build prod based on previous base stage\nFROM base AS prod\nWORKDIR /home/node/app\nCOPY package.json yarn.lock ./\nRUN yarn install --production\nCOPY . .\n\nCMD ["node", "index.js"]\n'})}),"\n",(0,o.jsx)(n.p,{children:"You can specify which stage of the dockerfile to use"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"$ docker build --target prod -t image:latest\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Read more: ",(0,o.jsx)(n.a,{href:"https://docs.docker.com/build/building/multi-stage/",children:"Multi-stage build"})]}),"\n",(0,o.jsx)(n.h3,{id:"tips--tricks",children:"Tips & tricks"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Use ",(0,o.jsx)(n.code,{children:"COPY"})," instead of ",(0,o.jsx)(n.code,{children:"ADD"})," (",(0,o.jsx)(n.a,{href:"https://docs.docker.com/develop/develop-images/dockerfile_best-practices",children:"read more"}),")."]}),"\n",(0,o.jsxs)(n.li,{children:["Separate ",(0,o.jsx)(n.code,{children:"COPY"})," files instructions to avoid invalidating all of them if only one change."]}),"\n",(0,o.jsx)(n.li,{children:"In hosted platforms, there is usually no access to previously cached layers. The builds are slower."}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"docker-compose",children:"Docker-compose"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"docker-compose.yaml"})," file specify the orchestration of multiple containers: ensure availability, schedule build and execution, test running and restart, manage network and discover services (which are containers in production)."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"$ docker-compose up   # auto-build image and starts containers\n$ docker-compose down # remove containers and default network, keep volumes\n$ docker-compose down --volumes # remove the volumes\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:'# Deployment of a simple TODO webapp\n\nversion: \'3\'\nservices:\n\t\n\tfrontend:\n\t\tcontainer_name: frontend\n\t\timage: web-server\n\t\trestart: always\n\t\tports:\n\t\t\t- \'8082:8080\' # host:container\n\t\tenvironment:\n\t\t\t- API_ENDPOINT_URL=https://api:8081\n\t\tdepends_on # Precedence rules:\n\t\t\t- api  # <- need to start before frontend\n\t\tvolumes: # Volumes to mount\n\t\t\t- ./frontend:/usr/share/nginx/html # host:container\n\t\tcommand:\xa0["nginx", "-g", "daemon off;"]\n\t\n\tapi:\n\t\tcontainer_name: api\n\t\tbuild:\n\t\t\tcontext: "./api"\n\t\t\tdockerfile: "Dockerfile.custom"\n\t\t\ttarget: "prod" # stage to target in dockerfile\n\t\t\tlabels:\n\t\t\t\tcom.example.description: "foobar" # metadata\n\t\tenvironment:\n\t\t\t- REDIS_ENDPOINT=redis\n\t\t\t- REDIS_PWD=ccp2\n\t\tworking_dir: /root/app\n\t\tdepends_on\n\t\t\t- redis\n\n\tredis:\n\t\tcontainer_name: redis\n\t\timage: redis\n\t\trestart: on-failure\n\t\tcommand: "redis-server --requirepass"\n'})}),"\n",(0,o.jsx)(n.h3,{id:"swarm",children:"Swarm"}),"\n",(0,o.jsx)(n.p,{children:"Swarm mode allow to manage multi-host clusters."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"$ docker swarm init # init swarm with current node as manager\n$ docker swarm join --token <token> <manager-ip> # join cluster\n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Commands run on manager node are executed on all worker nodes"}),"\n",(0,o.jsx)(n.li,{children:"Allow load-balancing"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:'version: "3"\nservices:\n\tweb\n\t\timage: \u2026\n\t\tdeploy:\n\t\t\treplicas: 5\n\t\t\tresources:\n\t\t\t\tlimits:\n\t\t\t\t\tcpus: "0.1"\n\t\t\t\t\tmemory: 50M\n\t\t\trestart_policy\n\t\t\t\tcondition: on-failure #\xa0restart containers if one fails\n\t\t\tports:\n\t\t\t\t- "4000:80" # host:container\n\t\t\texpose:\n\t\t\t\t- "80" # only available to linked services in same network\n\t\t\tnetworks:\n\t\t\t\t- webnet # containers share port via load-balancer network\n\t\n\tvisualizer:  \n\t\timage: dockersamples/visualizer:stable  \n\t\tports:  \n\t\t\t- "8080:8080"  \n\t\tvolumes:  \n\t\t\t# visualiser service access to the host socket file for docker\n\t\t\t- "/var/run/docker.sock:/var/run/docker.sock"\n\t\tdeploy:  \n\t\t\tplacement:  \n\t\t\t\tconstraints: [node.role == manager] # on manager only\n\t\t\tnetworks:  \n\t\t\t\t- webnet\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Read more: ",(0,o.jsx)(n.a,{href:"https://docs.docker.com/engine/swarm/",children:"Swarm mode overview"})]}),"\n",(0,o.jsx)(n.h2,{id:"resources",children:"Resources"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"General documentation"}),"\n",(0,o.jsx)(n.a,{href:"https://docker.com",children:"docker.com"})," \u2013 Website\n",(0,o.jsx)(n.a,{href:"https://docs.docker.com",children:"docs.docker.com"})," \u2013 Documentation"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Tips & Tricks"}),"\n",(0,o.jsx)(n.a,{href:"https://docs.docker.com/develop/develop-images/dockerfile_best-practices",children:"DockeFile best practices"})," \u2013 Documentation"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>c});var o=t(6540);const s={},r=o.createContext(s);function i(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);