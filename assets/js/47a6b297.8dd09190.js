"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[4945],{8978:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"codeSidebar":[{"type":"link","label":"Code","href":"/notebook/code/","docId":"code/code","unlisted":false},{"type":"category","label":"Languages","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"CSS","href":"/notebook/code/languages/css","docId":"code/languages/css","unlisted":false},{"type":"link","label":"Dart","href":"/notebook/code/languages/dart","docId":"code/languages/dart","unlisted":false},{"type":"link","label":"Python","href":"/notebook/code/languages/python","docId":"code/languages/python","unlisted":false}]},{"type":"category","label":"Frameworks","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Flutter","href":"/notebook/code/frameworks/flutter","docId":"code/frameworks/flutter","unlisted":false}]},{"type":"category","label":"Libraries","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"BLoC","href":"/notebook/code/libraries/bloc","docId":"code/libraries/bloc","unlisted":false}]},{"type":"category","label":"Tools","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Ansible","href":"/notebook/code/tools/ansible","docId":"code/tools/ansible","unlisted":false},{"type":"link","label":"Docker","href":"/notebook/code/tools/docker","docId":"code/tools/docker","unlisted":false},{"type":"link","label":"Kubernetes","href":"/notebook/code/tools/kubernetes","docId":"code/tools/kubernetes","unlisted":false},{"type":"link","label":"Terraform","href":"/notebook/code/tools/terraform","docId":"code/tools/terraform","unlisted":false}]},{"type":"category","label":"Glossary","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"CRUD","href":"/notebook/code/glossary/crud","docId":"code/glossary/crud","unlisted":false},{"type":"link","label":"Idempotence","href":"/notebook/code/glossary/idempotence","docId":"code/glossary/idempotence","unlisted":false},{"type":"link","label":"Immutable","href":"/notebook/code/glossary/immutable","docId":"code/glossary/immutable","unlisted":false},{"type":"link","label":"Tuple","href":"/notebook/code/glossary/tuple","docId":"code/glossary/tuple","unlisted":false}]}],"engineeringSidebar":[{"type":"category","label":"Algorithms","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Time complexity","href":"/notebook/engineering/algorithms/complexity","docId":"engineering/algorithms/complexity","unlisted":false},{"type":"category","label":"Genetic algorithms","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Simulated annealing","href":"/notebook/engineering/algorithms/genetic/simulated-annealing","docId":"engineering/algorithms/genetic/simulated-annealing","unlisted":false}],"href":"/notebook/engineering/algorithms/genetic/"},{"type":"category","label":"Graph algorithms","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Bellman-Ford algorithm","href":"/notebook/engineering/algorithms/graph/bellman-ford","docId":"engineering/algorithms/graph/bellman-ford","unlisted":false},{"type":"link","label":"Dijkstra\'s algorithm","href":"/notebook/engineering/algorithms/graph/dijkstra","docId":"engineering/algorithms/graph/dijkstra","unlisted":false},{"type":"link","label":"Floyd-Warshall algorithm","href":"/notebook/engineering/algorithms/graph/floyd-warshall","docId":"engineering/algorithms/graph/floyd-warshall","unlisted":false},{"type":"link","label":"Ford-Fulkerson algorithm","href":"/notebook/engineering/algorithms/graph/ford-fulkerson","docId":"engineering/algorithms/graph/ford-fulkerson","unlisted":false},{"type":"link","label":"Hungarian algorithm","href":"/notebook/engineering/algorithms/graph/hungarian","docId":"engineering/algorithms/graph/hungarian","unlisted":false},{"type":"link","label":"Kruskal\'s algorithm","href":"/notebook/engineering/algorithms/graph/kruskal","docId":"engineering/algorithms/graph/kruskal","unlisted":false},{"type":"link","label":"Nearest neighbour","href":"/notebook/engineering/algorithms/graph/nearest-neighbour","docId":"engineering/algorithms/graph/nearest-neighbour","unlisted":false},{"type":"link","label":"Prim\'s algorithm","href":"/notebook/engineering/algorithms/graph/prim","docId":"engineering/algorithms/graph/prim","unlisted":false}],"href":"/notebook/engineering/algorithms/graph/"},{"type":"category","label":"linear-programming","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Newton\'s method","href":"/notebook/engineering/algorithms/linear-programming/newton-method","docId":"engineering/algorithms/linear-programming/newton-method","unlisted":false},{"type":"link","label":"Simplex","href":"/notebook/engineering/algorithms/linear-programming/simplex","docId":"engineering/algorithms/linear-programming/simplex","unlisted":false}]},{"type":"category","label":"Problems","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Boolean Satisfiability Problem","href":"/notebook/engineering/algorithms/problems/boolean-satisfiability","docId":"engineering/algorithms/problems/boolean-satisfiability","unlisted":false},{"type":"link","label":"Constraint Satisfaction Problem","href":"/notebook/engineering/algorithms/problems/csp","docId":"engineering/algorithms/problems/csp","unlisted":false},{"type":"link","label":"Flow cost problem","href":"/notebook/engineering/algorithms/problems/flow","docId":"engineering/algorithms/problems/flow","unlisted":false},{"type":"link","label":"Graph coloring problem","href":"/notebook/engineering/algorithms/problems/graph-coloring","docId":"engineering/algorithms/problems/graph-coloring","unlisted":false},{"type":"link","label":"Halting problem","href":"/notebook/engineering/algorithms/problems/halting","docId":"engineering/algorithms/problems/halting","unlisted":false},{"type":"link","label":"Knapsack problem","href":"/notebook/engineering/algorithms/problems/knapsack","docId":"engineering/algorithms/problems/knapsack","unlisted":false},{"type":"link","label":"P vs. NP problem","href":"/notebook/engineering/algorithms/problems/p-vs-np","docId":"engineering/algorithms/problems/p-vs-np","unlisted":false},{"type":"link","label":"Quadratic Assignment Problem","href":"/notebook/engineering/algorithms/problems/quadratic-assignment","docId":"engineering/algorithms/problems/quadratic-assignment","unlisted":false},{"type":"link","label":"Scheduling problems","href":"/notebook/engineering/algorithms/problems/scheduling","docId":"engineering/algorithms/problems/scheduling","unlisted":false},{"type":"link","label":"Shortest path problem","href":"/notebook/engineering/algorithms/problems/shortest-path","docId":"engineering/algorithms/problems/shortest-path","unlisted":false},{"type":"link","label":"Steiner tree problem","href":"/notebook/engineering/algorithms/problems/steiner-tree","docId":"engineering/algorithms/problems/steiner-tree","unlisted":false},{"type":"link","label":"Traveling Salesman Problen","href":"/notebook/engineering/algorithms/problems/traveling-salesman","docId":"engineering/algorithms/problems/traveling-salesman","unlisted":false}],"href":"/notebook/engineering/algorithms/problems/"},{"type":"category","label":"search","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Beam search","href":"/notebook/engineering/algorithms/search/beam-search","docId":"engineering/algorithms/search/beam-search","unlisted":false},{"type":"link","label":"Binary search","href":"/notebook/engineering/algorithms/search/binary-search","docId":"engineering/algorithms/search/binary-search","unlisted":false},{"type":"link","label":"Breadth-first search","href":"/notebook/engineering/algorithms/search/breadth-first-search","docId":"engineering/algorithms/search/breadth-first-search","unlisted":false},{"type":"link","label":"Depth-first search","href":"/notebook/engineering/algorithms/search/depth-first-search","docId":"engineering/algorithms/search/depth-first-search","unlisted":false},{"type":"link","label":"Tabu search","href":"/notebook/engineering/algorithms/search/tabu-search","docId":"engineering/algorithms/search/tabu-search","unlisted":false},{"type":"link","label":"Two-pointers","href":"/notebook/engineering/algorithms/search/two-pointers","docId":"engineering/algorithms/search/two-pointers","unlisted":false}]},{"type":"category","label":"Sorting","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Counting sort","href":"/notebook/engineering/algorithms/sort/counting","docId":"engineering/algorithms/sort/counting","unlisted":false},{"type":"link","label":"Heapsort","href":"/notebook/engineering/algorithms/sort/heapsort","docId":"engineering/algorithms/sort/heapsort","unlisted":false},{"type":"link","label":"Quicksort","href":"/notebook/engineering/algorithms/sort/quicksort","docId":"engineering/algorithms/sort/quicksort","unlisted":false}],"href":"/notebook/engineering/algorithms/sort/"}],"href":"/notebook/engineering/algorithms/"},{"type":"category","label":"Architecture","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Representation model","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"other","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"4+1","href":"/notebook/engineering/architecture/models/other/4+1","docId":"engineering/architecture/models/other/4+1","unlisted":false},{"type":"link","label":"C4","href":"/notebook/engineering/architecture/models/other/c4","docId":"engineering/architecture/models/other/c4","unlisted":false},{"type":"link","label":"DFD","href":"/notebook/engineering/architecture/models/other/dfd","docId":"engineering/architecture/models/other/dfd","unlisted":false}]},{"type":"category","label":"sysml","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Requirement diagram","href":"/notebook/engineering/architecture/models/sysml/requirement-diagram","docId":"engineering/architecture/models/sysml/requirement-diagram","unlisted":false}]},{"type":"category","label":"UML","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"behaviour-diagrams","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Activity diagram","href":"/notebook/engineering/architecture/models/uml/behaviour-diagrams/activity-diagram","docId":"engineering/architecture/models/uml/behaviour-diagrams/activity-diagram","unlisted":false},{"type":"link","label":"Communication diagram","href":"/notebook/engineering/architecture/models/uml/behaviour-diagrams/communication-diagram","docId":"engineering/architecture/models/uml/behaviour-diagrams/communication-diagram","unlisted":false},{"type":"link","label":"Interaction overview diagram","href":"/notebook/engineering/architecture/models/uml/behaviour-diagrams/interaction-overview-diagram","docId":"engineering/architecture/models/uml/behaviour-diagrams/interaction-overview-diagram","unlisted":false},{"type":"link","label":"Sequence diagram","href":"/notebook/engineering/architecture/models/uml/behaviour-diagrams/sequence-diagram","docId":"engineering/architecture/models/uml/behaviour-diagrams/sequence-diagram","unlisted":false},{"type":"link","label":"State machine diagram","href":"/notebook/engineering/architecture/models/uml/behaviour-diagrams/state-machine-diagram","docId":"engineering/architecture/models/uml/behaviour-diagrams/state-machine-diagram","unlisted":false},{"type":"link","label":"Timing diagram","href":"/notebook/engineering/architecture/models/uml/behaviour-diagrams/timing-diagram","docId":"engineering/architecture/models/uml/behaviour-diagrams/timing-diagram","unlisted":false},{"type":"link","label":"Use Case diagram","href":"/notebook/engineering/architecture/models/uml/behaviour-diagrams/use-case-diagram","docId":"engineering/architecture/models/uml/behaviour-diagrams/use-case-diagram","unlisted":false}]},{"type":"category","label":"structural-diagrams","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Class diagram","href":"/notebook/engineering/architecture/models/uml/structural-diagrams/class-diagram","docId":"engineering/architecture/models/uml/structural-diagrams/class-diagram","unlisted":false},{"type":"link","label":"Component diagram","href":"/notebook/engineering/architecture/models/uml/structural-diagrams/component-diagram","docId":"engineering/architecture/models/uml/structural-diagrams/component-diagram","unlisted":false},{"type":"link","label":"Composite structure diagram","href":"/notebook/engineering/architecture/models/uml/structural-diagrams/composite-structure-diagram","docId":"engineering/architecture/models/uml/structural-diagrams/composite-structure-diagram","unlisted":false},{"type":"link","label":"Deployment diagram","href":"/notebook/engineering/architecture/models/uml/structural-diagrams/deployment-diagram","docId":"engineering/architecture/models/uml/structural-diagrams/deployment-diagram","unlisted":false},{"type":"link","label":"Object diagram","href":"/notebook/engineering/architecture/models/uml/structural-diagrams/object-diagram","docId":"engineering/architecture/models/uml/structural-diagrams/object-diagram","unlisted":false},{"type":"link","label":"Package diagram","href":"/notebook/engineering/architecture/models/uml/structural-diagrams/package-diagram","docId":"engineering/architecture/models/uml/structural-diagrams/package-diagram","unlisted":false}]}],"href":"/notebook/engineering/architecture/models/uml/"}],"href":"/notebook/engineering/architecture/models/"},{"type":"category","label":"Paradigms","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Declarative Imperative","href":"/notebook/engineering/architecture/paradigms/declarative-imperative","docId":"engineering/architecture/paradigms/declarative-imperative","unlisted":false},{"type":"link","label":"Design by contract","href":"/notebook/engineering/architecture/paradigms/design-by-contract","docId":"engineering/architecture/paradigms/design-by-contract","unlisted":false},{"type":"link","label":"Object-oriented","href":"/notebook/engineering/architecture/paradigms/object-oriented","docId":"engineering/architecture/paradigms/object-oriented","unlisted":false}],"href":"/notebook/engineering/architecture/paradigms/"},{"type":"category","label":"patterns","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Blackboard","href":"/notebook/engineering/architecture/patterns/blackboard","docId":"engineering/architecture/patterns/blackboard","unlisted":false},{"type":"link","label":"Microservices","href":"/notebook/engineering/architecture/patterns/microservices","docId":"engineering/architecture/patterns/microservices","unlisted":false},{"type":"link","label":"MVC","href":"/notebook/engineering/architecture/patterns/mvc","docId":"engineering/architecture/patterns/mvc","unlisted":false},{"type":"link","label":"Observer","href":"/notebook/engineering/architecture/patterns/observer","docId":"engineering/architecture/patterns/observer","unlisted":false},{"type":"link","label":"Pipe and filter","href":"/notebook/engineering/architecture/patterns/pipe-and-filter","docId":"engineering/architecture/patterns/pipe-and-filter","unlisted":false}]},{"type":"category","label":"principles","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"ACID","href":"/notebook/engineering/architecture/principles/acid","docId":"engineering/architecture/principles/acid","unlisted":false},{"type":"link","label":"readme","href":"/notebook/engineering/architecture/principles/assets/","docId":"engineering/architecture/principles/assets/readme","unlisted":false},{"type":"link","label":"Conway\'s law","href":"/notebook/engineering/architecture/principles/conway\'s-law","docId":"engineering/architecture/principles/conway\'s-law","unlisted":false},{"type":"link","label":"DRY","href":"/notebook/engineering/architecture/principles/dry","docId":"engineering/architecture/principles/dry","unlisted":false},{"type":"link","label":"Gall\'s law","href":"/notebook/engineering/architecture/principles/gall\'s-law","docId":"engineering/architecture/principles/gall\'s-law","unlisted":false},{"type":"link","label":"KISS","href":"/notebook/engineering/architecture/principles/kiss","docId":"engineering/architecture/principles/kiss","unlisted":false},{"type":"link","label":"Lehman\'s laws","href":"/notebook/engineering/architecture/principles/lehman\'s-laws","docId":"engineering/architecture/principles/lehman\'s-laws","unlisted":false},{"type":"link","label":"Separation of concerns","href":"/notebook/engineering/architecture/principles/separation-of-concerns","docId":"engineering/architecture/principles/separation-of-concerns","unlisted":false},{"type":"link","label":"SOLID","href":"/notebook/engineering/architecture/principles/solid","docId":"engineering/architecture/principles/solid","unlisted":false},{"type":"link","label":"Twelve-Factor App","href":"/notebook/engineering/architecture/principles/twelve-factor-app","docId":"engineering/architecture/principles/twelve-factor-app","unlisted":false}]},{"type":"category","label":"Quality Attributes","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Availability","href":"/notebook/engineering/architecture/quality-attributes/availability","docId":"engineering/architecture/quality-attributes/availability","unlisted":false},{"type":"link","label":"Interoperability","href":"/notebook/engineering/architecture/quality-attributes/interoperability","docId":"engineering/architecture/quality-attributes/interoperability","unlisted":false},{"type":"link","label":"Maintainability","href":"/notebook/engineering/architecture/quality-attributes/maintainability","docId":"engineering/architecture/quality-attributes/maintainability","unlisted":false},{"type":"link","label":"Performance","href":"/notebook/engineering/architecture/quality-attributes/performance","docId":"engineering/architecture/quality-attributes/performance","unlisted":false},{"type":"link","label":"Scalability","href":"/notebook/engineering/architecture/quality-attributes/scalability","docId":"engineering/architecture/quality-attributes/scalability","unlisted":false},{"type":"link","label":"Security","href":"/notebook/engineering/architecture/quality-attributes/security","docId":"engineering/architecture/quality-attributes/security","unlisted":false},{"type":"link","label":"Testability","href":"/notebook/engineering/architecture/quality-attributes/testability","docId":"engineering/architecture/quality-attributes/testability","unlisted":false}],"href":"/notebook/engineering/architecture/quality-attributes/"},{"type":"category","label":"styles","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"API","href":"/notebook/engineering/architecture/styles/api","docId":"engineering/architecture/styles/api","unlisted":false},{"type":"link","label":"Client-server","href":"/notebook/engineering/architecture/styles/client-server","docId":"engineering/architecture/styles/client-server","unlisted":false},{"type":"link","label":"Component-based","href":"/notebook/engineering/architecture/styles/component-based","docId":"engineering/architecture/styles/component-based","unlisted":false},{"type":"link","label":"Finite-state machine","href":"/notebook/engineering/architecture/styles/finite-state-machine","docId":"engineering/architecture/styles/finite-state-machine","unlisted":false},{"type":"link","label":"Layered","href":"/notebook/engineering/architecture/styles/layered","docId":"engineering/architecture/styles/layered","unlisted":false},{"type":"link","label":"Publish-subscribe","href":"/notebook/engineering/architecture/styles/publish-subscribe","docId":"engineering/architecture/styles/publish-subscribe","unlisted":false},{"type":"link","label":"Service-oriented","href":"/notebook/engineering/architecture/styles/service-oriented","docId":"engineering/architecture/styles/service-oriented","unlisted":false}]}],"href":"/notebook/engineering/architecture/"},{"type":"category","label":"artificial-intelligence","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Neural Network","href":"/notebook/engineering/artificial-intelligence/neural-network","docId":"engineering/artificial-intelligence/neural-network","unlisted":false},{"type":"link","label":"Natural Language Processing","href":"/notebook/engineering/artificial-intelligence/nlp","docId":"engineering/artificial-intelligence/nlp","unlisted":false},{"type":"link","label":"Robotic Process Automation","href":"/notebook/engineering/artificial-intelligence/rpa","docId":"engineering/artificial-intelligence/rpa","unlisted":false},{"type":"category","label":"Supervised Learning","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Classification","href":"/notebook/engineering/artificial-intelligence/supervised-learning/classification","docId":"engineering/artificial-intelligence/supervised-learning/classification","unlisted":false},{"type":"link","label":"Decision Tree","href":"/notebook/engineering/artificial-intelligence/supervised-learning/decision-tree","docId":"engineering/artificial-intelligence/supervised-learning/decision-tree","unlisted":false},{"type":"link","label":"Regression","href":"/notebook/engineering/artificial-intelligence/supervised-learning/regression","docId":"engineering/artificial-intelligence/supervised-learning/regression","unlisted":false}],"href":"/notebook/engineering/artificial-intelligence/supervised-learning/"}],"href":"/notebook/engineering/artificial-intelligence/"},{"type":"category","label":"Cyber security","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"CIA","href":"/notebook/engineering/cyber-security/cia","docId":"engineering/cyber-security/cia","unlisted":false},{"type":"category","label":"cryptography","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Steganography","href":"/notebook/engineering/cyber-security/cryptography/steganography","docId":"engineering/cyber-security/cryptography/steganography","unlisted":false}]},{"type":"link","label":"CWE","href":"/notebook/engineering/cyber-security/cwe","docId":"engineering/cyber-security/cwe","unlisted":false},{"type":"link","label":"IAM","href":"/notebook/engineering/cyber-security/iam","docId":"engineering/cyber-security/iam","unlisted":false},{"type":"link","label":"NIST","href":"/notebook/engineering/cyber-security/nist","docId":"engineering/cyber-security/nist","unlisted":false},{"type":"link","label":"OWASP","href":"/notebook/engineering/cyber-security/owasp","docId":"engineering/cyber-security/owasp","unlisted":false},{"type":"link","label":"PDCA","href":"/notebook/engineering/cyber-security/pdca","docId":"engineering/cyber-security/pdca","unlisted":false},{"type":"link","label":"STRIDE","href":"/notebook/engineering/cyber-security/stride","docId":"engineering/cyber-security/stride","unlisted":false}],"href":"/notebook/engineering/cyber-security/"},{"type":"category","label":"Data","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"binary","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Gray code","href":"/notebook/engineering/data/binary/gray-code","docId":"engineering/data/binary/gray-code","unlisted":false},{"type":"link","label":"Hamming distance","href":"/notebook/engineering/data/binary/hamming-distance","docId":"engineering/data/binary/hamming-distance","unlisted":false}],"href":"/notebook/engineering/data/binary/"},{"type":"category","label":"Data structure","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Graph","href":"/notebook/engineering/data/data-structure/graph","docId":"engineering/data/data-structure/graph","unlisted":false},{"type":"link","label":"Hash","href":"/notebook/engineering/data/data-structure/hash","docId":"engineering/data/data-structure/hash","unlisted":false},{"type":"category","label":"Heap","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Fibonacci Heap","href":"/notebook/engineering/data/data-structure/heap/fibonacci-heap","docId":"engineering/data/data-structure/heap/fibonacci-heap","unlisted":false}],"href":"/notebook/engineering/data/data-structure/heap/"},{"type":"link","label":"Tree","href":"/notebook/engineering/data/data-structure/tree","docId":"engineering/data/data-structure/tree","unlisted":false}],"href":"/notebook/engineering/data/data-structure/"},{"type":"category","label":"database","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"NoSQL","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Column","href":"/notebook/engineering/data/database/nosql/column","docId":"engineering/data/database/nosql/column","unlisted":false},{"type":"link","label":"Document","href":"/notebook/engineering/data/database/nosql/document","docId":"engineering/data/database/nosql/document","unlisted":false},{"type":"link","label":"Graph","href":"/notebook/engineering/data/database/nosql/graph","docId":"engineering/data/database/nosql/graph","unlisted":false},{"type":"link","label":"Key-Value","href":"/notebook/engineering/data/database/nosql/key-value","docId":"engineering/data/database/nosql/key-value","unlisted":false}],"href":"/notebook/engineering/data/database/nosql/"},{"type":"link","label":"RDBMS","href":"/notebook/engineering/data/database/rdbms","docId":"engineering/data/database/rdbms","unlisted":false},{"type":"link","label":"Sharding","href":"/notebook/engineering/data/database/sharding","docId":"engineering/data/database/sharding","unlisted":false}]},{"type":"category","label":"glossary","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Garbage In, Garbage Out","href":"/notebook/engineering/data/glossary/gigo","docId":"engineering/data/glossary/gigo","unlisted":false}]},{"type":"category","label":"Data types","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Date types","href":"/notebook/engineering/data/types/date","docId":"engineering/data/types/date","unlisted":false},{"type":"link","label":"Numeric types","href":"/notebook/engineering/data/types/numeric","docId":"engineering/data/types/numeric","unlisted":false}],"href":"/notebook/engineering/data/types/"}],"href":"/notebook/engineering/data/"},{"type":"category","label":"DevOps","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"CI/CD","href":"/notebook/engineering/devops/ci-cd","docId":"engineering/devops/ci-cd","unlisted":false},{"type":"category","label":"glossary","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Pet vs. Cattle","href":"/notebook/engineering/devops/glossary/pet-vs-cattle","docId":"engineering/devops/glossary/pet-vs-cattle","unlisted":false}]},{"type":"link","label":"Monorepo","href":"/notebook/engineering/devops/monorepo","docId":"engineering/devops/monorepo","unlisted":false},{"type":"link","label":"Unit testing","href":"/notebook/engineering/devops/unit-testing","docId":"engineering/devops/unit-testing","unlisted":false},{"type":"link","label":"Virtualization","href":"/notebook/engineering/devops/virtualization","docId":"engineering/devops/virtualization","unlisted":false}],"href":"/notebook/engineering/devops/"},{"type":"link","label":"Engineering","href":"/notebook/engineering/","docId":"engineering/engineering","unlisted":false},{"type":"category","label":"infrastructure","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Cloud","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"As a Service","href":"/notebook/engineering/infrastructure/cloud/as-a-service","docId":"engineering/infrastructure/cloud/as-a-service","unlisted":false},{"type":"link","label":"Edge Computing","href":"/notebook/engineering/infrastructure/cloud/edge-computing","docId":"engineering/infrastructure/cloud/edge-computing","unlisted":false},{"type":"category","label":"glossary","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Pets vs Cattle","href":"/notebook/engineering/infrastructure/cloud/glossary/pets-vs.-cattle","docId":"engineering/infrastructure/cloud/glossary/pets-vs.-cattle","unlisted":false},{"type":"link","label":"Serverless","href":"/notebook/engineering/infrastructure/cloud/glossary/serverless","docId":"engineering/infrastructure/cloud/glossary/serverless","unlisted":false}]},{"type":"link","label":"Infrastructure as Code","href":"/notebook/engineering/infrastructure/cloud/infrastructure-as-code","docId":"engineering/infrastructure/cloud/infrastructure-as-code","unlisted":false},{"type":"link","label":"IoT","href":"/notebook/engineering/infrastructure/cloud/iot","docId":"engineering/infrastructure/cloud/iot","unlisted":false},{"type":"link","label":"Load balancing","href":"/notebook/engineering/infrastructure/cloud/load-balancing","docId":"engineering/infrastructure/cloud/load-balancing","unlisted":false},{"type":"link","label":"Virtualization","href":"/notebook/engineering/infrastructure/cloud/virtualization","docId":"engineering/infrastructure/cloud/virtualization","unlisted":false}],"href":"/notebook/engineering/infrastructure/cloud/"},{"type":"category","label":"network","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"readme","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Broad Network Access","href":"/notebook/engineering/infrastructure/network/glossary/bna","docId":"engineering/infrastructure/network/glossary/bna","unlisted":false}],"href":"/notebook/engineering/infrastructure/network/glossary/"},{"type":"link","label":"Protocols","href":"/notebook/engineering/infrastructure/network/protocols","docId":"engineering/infrastructure/network/protocols","unlisted":false}]},{"type":"category","label":"os","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Kernel","href":"/notebook/engineering/infrastructure/os/kernel","docId":"engineering/infrastructure/os/kernel","unlisted":false}]},{"type":"link","label":"Web","href":"/notebook/engineering/infrastructure/web/","docId":"engineering/infrastructure/web/web","unlisted":false}]},{"type":"category","label":"Mathematics","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Linear algebra","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Derivative","href":"/notebook/engineering/maths/algebra/derivative","docId":"engineering/maths/algebra/derivative","unlisted":false},{"type":"link","label":"Function","href":"/notebook/engineering/maths/algebra/function","docId":"engineering/maths/algebra/function","unlisted":false},{"type":"link","label":"Integral","href":"/notebook/engineering/maths/algebra/integral","docId":"engineering/maths/algebra/integral","unlisted":false},{"type":"link","label":"Sets","href":"/notebook/engineering/maths/algebra/sets","docId":"engineering/maths/algebra/sets","unlisted":false},{"type":"link","label":"Vectors","href":"/notebook/engineering/maths/algebra/vectors","docId":"engineering/maths/algebra/vectors","unlisted":false}],"href":"/notebook/engineering/maths/algebra/"},{"type":"category","label":"Physics","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Energy","href":"/notebook/engineering/maths/physics/energy","docId":"engineering/maths/physics/energy","unlisted":false},{"type":"link","label":"Motion","href":"/notebook/engineering/maths/physics/motion","docId":"engineering/maths/physics/motion","unlisted":false}],"href":"/notebook/engineering/maths/physics/"}],"href":"/notebook/engineering/maths/"}],"managementSidebar":[{"type":"category","label":"Agile","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Kanban","href":"/notebook/management/agile/kanban","docId":"management/agile/kanban","unlisted":false},{"type":"link","label":"Lean","href":"/notebook/management/agile/lean","docId":"management/agile/lean","unlisted":false},{"type":"link","label":"SAFe","href":"/notebook/management/agile/safe","docId":"management/agile/safe","unlisted":false},{"type":"link","label":"Scrum","href":"/notebook/management/agile/scrum","docId":"management/agile/scrum","unlisted":false},{"type":"link","label":"XP","href":"/notebook/management/agile/xp","docId":"management/agile/xp","unlisted":false}],"href":"/notebook/management/agile/"},{"type":"link","label":"Estimation","href":"/notebook/management/estimation","docId":"management/estimation","unlisted":false},{"type":"category","label":"glossary","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"MOOC","href":"/notebook/management/glossary/mooc","docId":"management/glossary/mooc","unlisted":false},{"type":"link","label":"Total Cost of Ownership","href":"/notebook/management/glossary/tco","docId":"management/glossary/tco","unlisted":false}]},{"type":"link","label":"Management","href":"/notebook/management/","docId":"management/management","unlisted":false},{"type":"category","label":"marketing","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Customer Relationship Management","href":"/notebook/management/marketing/crm","docId":"management/marketing/crm","unlisted":false},{"type":"link","label":"Entreprise Resources Planning","href":"/notebook/management/marketing/erp","docId":"management/marketing/erp","unlisted":false},{"type":"category","label":"glossary","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Dumping","href":"/notebook/management/marketing/glossary/dumping","docId":"management/marketing/glossary/dumping","unlisted":false},{"type":"link","label":"Not Invented Here","href":"/notebook/management/marketing/glossary/nih","docId":"management/marketing/glossary/nih","unlisted":false},{"type":"link","label":"USP","href":"/notebook/management/marketing/glossary/usp","docId":"management/marketing/glossary/usp","unlisted":false}]},{"type":"link","label":"Marketing mix","href":"/notebook/management/marketing/marketing-mix","docId":"management/marketing/marketing-mix","unlisted":false},{"type":"category","label":"models","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Golden Circle","href":"/notebook/management/marketing/models/golden-circle","docId":"management/marketing/models/golden-circle","unlisted":false}]},{"type":"link","label":"Product lifecycle","href":"/notebook/management/marketing/product-lifecycle","docId":"management/marketing/product-lifecycle","unlisted":false},{"type":"link","label":"Story telling","href":"/notebook/management/marketing/story-telling","docId":"management/marketing/story-telling","unlisted":false}]},{"type":"category","label":"models","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Eisenhower matrix","href":"/notebook/management/models/eisenhower-matrix","docId":"management/models/eisenhower-matrix","unlisted":false},{"type":"link","label":"Pareto","href":"/notebook/management/models/pareto","docId":"management/models/pareto","unlisted":false},{"type":"link","label":"PESTEL","href":"/notebook/management/models/pestel","docId":"management/models/pestel","unlisted":false},{"type":"link","label":"SWOT","href":"/notebook/management/models/swot","docId":"management/models/swot","unlisted":false},{"type":"link","label":"VUCA","href":"/notebook/management/models/vuca","docId":"management/models/vuca","unlisted":false}]}],"uxSidebar":[{"type":"category","label":"glossary","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Affordance","href":"/notebook/ux/glossary/affordance","docId":"ux/glossary/affordance","unlisted":false},{"type":"link","label":"Ergonomy","href":"/notebook/ux/glossary/ergonomy","docId":"ux/glossary/ergonomy","unlisted":false},{"type":"link","label":"Skeumorphism","href":"/notebook/ux/glossary/skeuomorphism","docId":"ux/glossary/skeuomorphism","unlisted":false},{"type":"link","label":"TUI","href":"/notebook/ux/glossary/tui","docId":"ux/glossary/tui","unlisted":false},{"type":"link","label":"Usability","href":"/notebook/ux/glossary/usability","docId":"ux/glossary/usability","unlisted":false}]},{"type":"category","label":"guides","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"6 Design Principles","href":"/notebook/ux/guides/design-principles","docId":"ux/guides/design-principles","unlisted":false},{"type":"link","label":"8 Golden Rules of UI","href":"/notebook/ux/guides/golden-rules-of-ui","docId":"ux/guides/golden-rules-of-ui","unlisted":false},{"type":"link","label":"10 Usability Heuristics","href":"/notebook/ux/guides/usability-heuristics","docId":"ux/guides/usability-heuristics","unlisted":false}]},{"type":"category","label":"principles","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Campbell\'s law","href":"/notebook/ux/principles/campbell-law","docId":"ux/principles/campbell-law","unlisted":false},{"type":"link","label":"Fitt\'s law","href":"/notebook/ux/principles/fitt-law","docId":"ux/principles/fitt-law","unlisted":false},{"type":"link","label":"Gestalt","href":"/notebook/ux/principles/gestalt","docId":"ux/principles/gestalt","unlisted":false},{"type":"link","label":"LATCH","href":"/notebook/ux/principles/latch","docId":"ux/principles/latch","unlisted":false}]},{"type":"link","label":"Tests","href":"/notebook/ux/tests","docId":"ux/tests","unlisted":false},{"type":"category","label":"tools","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Cognitive walkthrough","href":"/notebook/ux/tools/cognitive-walkthrough","docId":"ux/tools/cognitive-walkthrough","unlisted":false},{"type":"link","label":"Likert scale","href":"/notebook/ux/tools/likert-scale","docId":"ux/tools/likert-scale","unlisted":false}]},{"type":"link","label":"UI","href":"/notebook/ux/ui","docId":"ux/ui","unlisted":false},{"type":"link","label":"User Experience","href":"/notebook/ux/","docId":"ux/ux","unlisted":false}]},"docs":{"code/code":{"id":"code/code","title":"Code","description":"Here is a collection of notes about programming languages, frameworks and other coding tools.","sidebar":"codeSidebar"},"code/frameworks/flutter":{"id":"code/frameworks/flutter","title":"Flutter","description":"Flutter is a Dart framework to build mobile and desktop application from a single codebase.","sidebar":"codeSidebar"},"code/glossary/crud":{"id":"code/glossary/crud","title":"CRUD","description":"CRUD are four basic operations to interact with a storage / database:","sidebar":"codeSidebar"},"code/glossary/idempotence":{"id":"code/glossary/idempotence","title":"Idempotence","description":"Idempotent commands or functions can be run multiple times and always give the same result.","sidebar":"codeSidebar"},"code/glossary/immutable":{"id":"code/glossary/immutable","title":"Immutable","description":"An immutable property is an object or attribute whose value cannot be changed once it has been set. This can be helpful in programming, as it ensures that the value remains consistent and cannot be modified. Immutable objects are also beneficial in terms of memory management, as they can be reused without having to be recreated each time.","sidebar":"codeSidebar"},"code/glossary/tuple":{"id":"code/glossary/tuple","title":"Tuple","description":"In programming, a tuple an immutable list; it cannot be changed once set.","sidebar":"codeSidebar"},"code/languages/css":{"id":"code/languages/css","title":"CSS","description":"Resources","sidebar":"codeSidebar"},"code/languages/dart":{"id":"code/languages/dart","title":"Dart","description":"Values & Types","sidebar":"codeSidebar"},"code/languages/python":{"id":"code/languages/python","title":"Python","description":"\x3c!--","sidebar":"codeSidebar"},"code/libraries/bloc":{"id":"code/libraries/bloc","title":"BLoC","description":"BLoC is a state management library for Dart and Flutter","sidebar":"codeSidebar"},"code/tools/ansible":{"id":"code/tools/ansible","title":"Ansible","description":"Inventory file: collection of hosts","sidebar":"codeSidebar"},"code/tools/docker":{"id":"code/tools/docker","title":"Docker","description":"Docker) is a containerization tool","sidebar":"codeSidebar"},"code/tools/kubernetes":{"id":"code/tools/kubernetes","title":"Kubernetes","description":"Components","sidebar":"codeSidebar"},"code/tools/terraform":{"id":"code/tools/terraform","title":"Terraform","description":"Concepts","sidebar":"codeSidebar"},"engineering/algorithms/algorithms":{"id":"engineering/algorithms/algorithms","title":"Algorithms","description":"An algorithm can be defined as a sequence of operations tailored to solve a specific problem.","sidebar":"engineeringSidebar"},"engineering/algorithms/complexity":{"id":"engineering/algorithms/complexity","title":"Time complexity","description":"We define time complexity as the time a computer take to run an algorithm.","sidebar":"engineeringSidebar"},"engineering/algorithms/genetic/genetic":{"id":"engineering/algorithms/genetic/genetic","title":"Genetic algorithms","description":"Genetic algorithms imitate biological processes like natural selection, mutation, inheritance, etc.","sidebar":"engineeringSidebar"},"engineering/algorithms/genetic/simulated-annealing":{"id":"engineering/algorithms/genetic/simulated-annealing","title":"Simulated annealing","description":"Simulated annealing aims to find the global minimum/maximum value by occasionally accepting solutions that are worse than the previous one. This approach helps to avoid getting stuck in a local minimum/maximum solution.","sidebar":"engineeringSidebar"},"engineering/algorithms/graph/bellman-ford":{"id":"engineering/algorithms/graph/bellman-ford","title":"Bellman-Ford algorithm","description":"Bellman-Ford algorithm find shortest-path in a [graph]], from one vertex to the other ones. It\'s like [Dijkstra algorithm, but can handle negative weighted edges. It\'s also slower.","sidebar":"engineeringSidebar"},"engineering/algorithms/graph/dijkstra":{"id":"engineering/algorithms/graph/dijkstra","title":"Dijkstra\'s algorithm","description":"Dijkstra\'s algorithm is a greedy algorithm that can be used to find, in a graph, the shortest path from a chosen vertices among all the other vertices.","sidebar":"engineeringSidebar"},"engineering/algorithms/graph/floyd-warshall":{"id":"engineering/algorithms/graph/floyd-warshall","title":"Floyd-Warshall algorithm","description":"Floyd-Warshall algorithm try to find the shortest path among all the vertices from a graph, with positive or negative weighted edges. It\'s best suited for denses graphs.","sidebar":"engineeringSidebar"},"engineering/algorithms/graph/ford-fulkerson":{"id":"engineering/algorithms/graph/ford-fulkerson","title":"Ford-Fulkerson algorithm","description":"Ford-Fulkerson algorithm is a greedy algorithm to find a maximum flow among a graph.","sidebar":"engineeringSidebar"},"engineering/algorithms/graph/graph":{"id":"engineering/algorithms/graph/graph","title":"Graph algorithms","description":"Graphs are data structures often use to model certain types of problems.","sidebar":"engineeringSidebar"},"engineering/algorithms/graph/hungarian":{"id":"engineering/algorithms/graph/hungarian","title":"Hungarian algorithm","description":"Hungarian algorithm allow to solve an assignment problem","sidebar":"engineeringSidebar"},"engineering/algorithms/graph/kruskal":{"id":"engineering/algorithms/graph/kruskal","title":"Kruskal\'s algorithm","description":"Kruskal\'s algorithm is a greedy algorithm that tries to find a Minimum Spanning Tree among a graph. To achieve this, he use a minimal spanning forest first and connect the trees together.","sidebar":"engineeringSidebar"},"engineering/algorithms/graph/nearest-neighbour":{"id":"engineering/algorithms/graph/nearest-neighbour","title":"Nearest neighbour","description":"Nearest neighbour is a greedy algorithm initially to find the shortest path among a graph. It is typically used to solve problems like Traveling Salesman.","sidebar":"engineeringSidebar"},"engineering/algorithms/graph/prim":{"id":"engineering/algorithms/graph/prim","title":"Prim\'s algorithm","description":"Prim\'s algorithm is a greedy algorithm used to find the Minimum Spanning Tree in a graph.","sidebar":"engineeringSidebar"},"engineering/algorithms/linear-programming/newton-method":{"id":"engineering/algorithms/linear-programming/newton-method","title":"Newton\'s method","description":"Newton\'s method is an algorithm to find the real zeros of a function with the derivative of the function to find its roots.","sidebar":"engineeringSidebar"},"engineering/algorithms/linear-programming/simplex":{"id":"engineering/algorithms/linear-programming/simplex","title":"Simplex","description":"The Simplex algorithm is used to solve linear programming optimization problems. For example, if we want to find the best value according to constraints.","sidebar":"engineeringSidebar"},"engineering/algorithms/problems/boolean-satisfiability":{"id":"engineering/algorithms/problems/boolean-satisfiability","title":"Boolean Satisfiability Problem","description":"In Boolean Satisfiability Problem (SAT), we try to solve a formula composed of boolean expressions. If we find a way so the formula is true, it is satisfiable.","sidebar":"engineeringSidebar"},"engineering/algorithms/problems/csp":{"id":"engineering/algorithms/problems/csp","title":"Constraint Satisfaction Problem","description":"Constraint Satisfaction Problem (CSP)","sidebar":"engineeringSidebar"},"engineering/algorithms/problems/flow":{"id":"engineering/algorithms/problems/flow","title":"Flow cost problem","description":"We try to find the minimum or maximum flow among a graph.","sidebar":"engineeringSidebar"},"engineering/algorithms/problems/graph-coloring":{"id":"engineering/algorithms/problems/graph-coloring","title":"Graph coloring problem","description":"Graph coloring problems include the coloring (or labeling) of vertices in a graph.","sidebar":"engineeringSidebar"},"engineering/algorithms/problems/halting":{"id":"engineering/algorithms/problems/halting","title":"Halting problem","description":"The halting problem determine if a program can run forever or not.","sidebar":"engineeringSidebar"},"engineering/algorithms/problems/knapsack":{"id":"engineering/algorithms/problems/knapsack","title":"Knapsack problem","description":"The knapsack problem is a combinatorial optimization problem, used in resource allocation. It can concern for example: minimal waste in material cutting, selection of investements, cryoptgraphy, etc.","sidebar":"engineeringSidebar"},"engineering/algorithms/problems/p-vs-np":{"id":"engineering/algorithms/problems/p-vs-np","title":"P vs. NP problem","description":"The P vs. NP problem asks is it\'s possible to finding a solution to a problem as quickly it is to verify it. P and NP refers to the complexity classes of these problems.","sidebar":"engineeringSidebar"},"engineering/algorithms/problems/problems":{"id":"engineering/algorithms/problems/problems","title":"Problems","description":"Common problems","sidebar":"engineeringSidebar"},"engineering/algorithms/problems/quadratic-assignment":{"id":"engineering/algorithms/problems/quadratic-assignment","title":"Quadratic Assignment Problem","description":"The Quadratic Assignment Problem (QAP) is stated like this:","sidebar":"engineeringSidebar"},"engineering/algorithms/problems/scheduling":{"id":"engineering/algorithms/problems/scheduling","title":"Scheduling problems","description":"Scheduling) involves some problems that can be fixed with algorithms. Here is some scheduling problems:","sidebar":"engineeringSidebar"},"engineering/algorithms/problems/shortest-path":{"id":"engineering/algorithms/problems/shortest-path","title":"Shortest path problem","description":"The shortest path problem try to find a path in a graph cover the less distance. For that, the weights of the chosen edges should be as small as possible.","sidebar":"engineeringSidebar"},"engineering/algorithms/problems/steiner-tree":{"id":"engineering/algorithms/problems/steiner-tree","title":"Steiner tree problem","description":"Steiner tree problem can be see to the mix between a Minimum Spanning Tree problem and a shortest path problem. It tries to find the shortest network between the vertices of a graph.","sidebar":"engineeringSidebar"},"engineering/algorithms/problems/traveling-salesman":{"id":"engineering/algorithms/problems/traveling-salesman","title":"Traveling Salesman Problen","description":"The Traveling Salesman Problem (TSP) needs to find the shortest possible route for a salesman to visit each city exactly one time and returns to the starting point.","sidebar":"engineeringSidebar"},"engineering/algorithms/search/beam-search":{"id":"engineering/algorithms/search/beam-search","title":"Beam search","description":"Beam search is a heuristic algorithm applied on a tree. It\'s very similar to breadth-first search, but it keeps $p$ best candidates at each $k$ level of the tree.","sidebar":"engineeringSidebar"},"engineering/algorithms/search/binary-search":{"id":"engineering/algorithms/search/binary-search","title":"Binary search","description":"The binary search is used to find a value by splitting the interval into two at each iteration. For that, the list/array should be sorted.","sidebar":"engineeringSidebar"},"engineering/algorithms/search/breadth-first-search":{"id":"engineering/algorithms/search/breadth-first-search","title":"Breadth-first search","description":"Breadth-first search (BFS) search inside a graph by first prioritising all the children nodes before moving to the next one.","sidebar":"engineeringSidebar"},"engineering/algorithms/search/depth-first-search":{"id":"engineering/algorithms/search/depth-first-search","title":"Depth-first search","description":"Depth-first search (DFS) search inside a graph by exploring as far as possible along each branch before backtracking.","sidebar":"engineeringSidebar"},"engineering/algorithms/search/tabu-search":{"id":"engineering/algorithms/search/tabu-search","title":"Tabu search","description":"Tabu search is a metaheuristic to avoid getting stuck in local optimum during a neighborhood search.","sidebar":"engineeringSidebar"},"engineering/algorithms/search/two-pointers":{"id":"engineering/algorithms/search/two-pointers","title":"Two-pointers","description":"Two-pointers is used to search pairs in an array.","sidebar":"engineeringSidebar"},"engineering/algorithms/sort/counting":{"id":"engineering/algorithms/sort/counting","title":"Counting sort","description":"Counting sort is used to sort small range of integers. It basically works like this:","sidebar":"engineeringSidebar"},"engineering/algorithms/sort/heapsort":{"id":"engineering/algorithms/sort/heapsort","title":"Heapsort","description":"The heapsort is a sorting algorithm using max-heap data structure. It basically works like this:","sidebar":"engineeringSidebar"},"engineering/algorithms/sort/quicksort":{"id":"engineering/algorithms/sort/quicksort","title":"Quicksort","description":"Quicksort split the list in two part, then split those part into more parts, sorting them along the way. It chooses a pivot point in a part of the array and then compares it with all the other points in that part of the array.","sidebar":"engineeringSidebar"},"engineering/algorithms/sort/sort":{"id":"engineering/algorithms/sort/sort","title":"Sorting","description":"Sorting algorithms puts elements from a list in order, like ascending/descending, alphabetical, numerical, etc.","sidebar":"engineeringSidebar"},"engineering/architecture/architecture":{"id":"engineering/architecture/architecture","title":"Architecture","description":"Software architecture is the structure of a software, like a program or an Operating System. It defines main modules, components and elements, but also the relationships and interaction between them.","sidebar":"engineeringSidebar"},"engineering/architecture/models/models":{"id":"engineering/architecture/models/models","title":"Representation model","description":"Resources","sidebar":"engineeringSidebar"},"engineering/architecture/models/other/4+1":{"id":"engineering/architecture/models/other/4+1","title":"4+1","description":"4+1 is an architectural view model. It can be considered as the first version of diagrams.","sidebar":"engineeringSidebar"},"engineering/architecture/models/other/c4":{"id":"engineering/architecture/models/other/c4","title":"C4","description":"C4 model represent software architecture by 4 layers of abstraction.","sidebar":"engineeringSidebar"},"engineering/architecture/models/other/dfd":{"id":"engineering/architecture/models/other/dfd","title":"DFD","description":"Data-flow diagram illustrates the flow of information for processes and systems.","sidebar":"engineeringSidebar"},"engineering/architecture/models/sysml/requirement-diagram":{"id":"engineering/architecture/models/sysml/requirement-diagram","title":"Requirement diagram","description":"A requirement diagram ensures that the solutions meets the client\'s needs. It describes constraints that can be physical, technical, functional, etc.","sidebar":"engineeringSidebar"},"engineering/architecture/models/uml/behaviour-diagrams/activity-diagram":{"id":"engineering/architecture/models/uml/behaviour-diagrams/activity-diagram","title":"Activity diagram","description":"An activity diagram represent a process as a flow of actions, triggers and conditions. It is generic by design and can be used to clarify operations with stakeholders.","sidebar":"engineeringSidebar"},"engineering/architecture/models/uml/behaviour-diagrams/communication-diagram":{"id":"engineering/architecture/models/uml/behaviour-diagrams/communication-diagram","title":"Communication diagram","description":"A communication diagram displays interactions between objects in sequence, where actions are numerated to explain the execution order.","sidebar":"engineeringSidebar"},"engineering/architecture/models/uml/behaviour-diagrams/interaction-overview-diagram":{"id":"engineering/architecture/models/uml/behaviour-diagrams/interaction-overview-diagram","title":"Interaction overview diagram","description":"The interaction overview diagram illustrates relations between all the other interactions diagram: sequence.","sidebar":"engineeringSidebar"},"engineering/architecture/models/uml/behaviour-diagrams/sequence-diagram":{"id":"engineering/architecture/models/uml/behaviour-diagrams/sequence-diagram","title":"Sequence diagram","description":"A sequence diagram shows what information processes exchange between nodes over time.","sidebar":"engineeringSidebar"},"engineering/architecture/models/uml/behaviour-diagrams/state-machine-diagram":{"id":"engineering/architecture/models/uml/behaviour-diagrams/state-machine-diagram","title":"State machine diagram","description":"A state machine diagram illustrates the flow of the different states that a system can be. It is closely related to the finite-state machine principle.","sidebar":"engineeringSidebar"},"engineering/architecture/models/uml/behaviour-diagrams/timing-diagram":{"id":"engineering/architecture/models/uml/behaviour-diagrams/timing-diagram","title":"Timing diagram","description":"A timing diagram) focus on temporal constraints, e.g. how long an interaction should last, the required duration of an execution, etc.","sidebar":"engineeringSidebar"},"engineering/architecture/models/uml/behaviour-diagrams/use-case-diagram":{"id":"engineering/architecture/models/uml/behaviour-diagrams/use-case-diagram","title":"Use Case diagram","description":"The Use Case diagram represents the user\'s possible interactions with a system. It\'s usually a good tool to show stakeholders how the system will be designed.","sidebar":"engineeringSidebar"},"engineering/architecture/models/uml/structural-diagrams/class-diagram":{"id":"engineering/architecture/models/uml/structural-diagrams/class-diagram","title":"Class diagram","description":"The class diagram show the system\'s classes, attributes, methods and relationships. It\'s mostly used in OOP.","sidebar":"engineeringSidebar"},"engineering/architecture/models/uml/structural-diagrams/component-diagram":{"id":"engineering/architecture/models/uml/structural-diagrams/component-diagram","title":"Component diagram","description":"A component diagram explain how components are linked together to form a system.","sidebar":"engineeringSidebar"},"engineering/architecture/models/uml/structural-diagrams/composite-structure-diagram":{"id":"engineering/architecture/models/uml/structural-diagrams/composite-structure-diagram","title":"Composite structure diagram","description":"The composite structure diagram is used to illustrate the hardware of devices, e.g. IoT sensors. It is especially useful for embedded systems.","sidebar":"engineeringSidebar"},"engineering/architecture/models/uml/structural-diagrams/deployment-diagram":{"id":"engineering/architecture/models/uml/structural-diagrams/deployment-diagram","title":"Deployment diagram","description":"The deployment diagram shows how artifacts are physically deployed on nodes (e.g. server, device, OS, \u2026)","sidebar":"engineeringSidebar"},"engineering/architecture/models/uml/structural-diagrams/object-diagram":{"id":"engineering/architecture/models/uml/structural-diagrams/object-diagram","title":"Object diagram","description":"An object diagram is an instance of a class diagram.","sidebar":"engineeringSidebar"},"engineering/architecture/models/uml/structural-diagrams/package-diagram":{"id":"engineering/architecture/models/uml/structural-diagrams/package-diagram","title":"Package diagram","description":"A package diagram specify dependencies between packages: libraries, collection of modules/components, importation elements, etc.","sidebar":"engineeringSidebar"},"engineering/architecture/models/uml/uml":{"id":"engineering/architecture/models/uml/uml","title":"UML","description":"Unified Modeling Language (UML) is a set of convention and standards to create diagrams for software development. It helps visualizing the architecture of a program before actually developing it.","sidebar":"engineeringSidebar"},"engineering/architecture/paradigms/declarative-imperative":{"id":"engineering/architecture/paradigms/declarative-imperative","title":"Declarative Imperative","description":"Declarative","sidebar":"engineeringSidebar"},"engineering/architecture/paradigms/design-by-contract":{"id":"engineering/architecture/paradigms/design-by-contract","title":"Design by contract","description":"Design by contract (DbC) is a way to architecture a system where components force the use of their methods via interfaces.","sidebar":"engineeringSidebar"},"engineering/architecture/paradigms/object-oriented":{"id":"engineering/architecture/paradigms/object-oriented","title":"Object-oriented","description":"Object-oriented programming (OOP) represents data and methods by representing them with objects which communicate between them. It is component-based.","sidebar":"engineeringSidebar"},"engineering/architecture/paradigms/paradigms":{"id":"engineering/architecture/paradigms/paradigms","title":"Paradigms","description":"Resources","sidebar":"engineeringSidebar"},"engineering/architecture/patterns/blackboard":{"id":"engineering/architecture/patterns/blackboard","title":"Blackboard","description":"Blackboard pattern) implements a centralized repository, called the blackboard, which other components can access to retrieve and share data. Component have their own specialized expertise to solve problem and write down the solution on the blackboard.","sidebar":"engineeringSidebar"},"engineering/architecture/patterns/microservices":{"id":"engineering/architecture/patterns/microservices","title":"Microservices","description":"Microservices is a variant of service-oriented architectural style. It is used to build loosely-coupled applications.","sidebar":"engineeringSidebar"},"engineering/architecture/patterns/mvc":{"id":"engineering/architecture/patterns/mvc","title":"MVC","description":"Model-View-Controller is a design pattern to develop user interface in three interconnected components.","sidebar":"engineeringSidebar"},"engineering/architecture/patterns/observer":{"id":"engineering/architecture/patterns/observer","title":"Observer","description":"In observer pattern, a subject maintains a list of its observers and notifies them automatically of any state change. Unless the pub-sub pattern, an observer must keep track of its subscribers.","sidebar":"engineeringSidebar"},"engineering/architecture/patterns/pipe-and-filter":{"id":"engineering/architecture/patterns/pipe-and-filter","title":"Pipe and filter","description":"In Pipe and filter) architecture, operations work only one-way: the output of a component is the input of another.","sidebar":"engineeringSidebar"},"engineering/architecture/principles/acid":{"id":"engineering/architecture/principles/acid","title":"ACID","description":"ACID properties are principles applicable in rdbms","sidebar":"engineeringSidebar"},"engineering/architecture/principles/assets/readme":{"id":"engineering/architecture/principles/assets/readme","title":"readme","description":"solidcheatsheet.pdf","sidebar":"engineeringSidebar"},"engineering/architecture/principles/conway\'s-law":{"id":"engineering/architecture/principles/conway\'s-law","title":"Conway\'s law","description":"Conway\'s law is a rule of thumb that states:","sidebar":"engineeringSidebar"},"engineering/architecture/principles/dry":{"id":"engineering/architecture/principles/dry","title":"DRY","description":"The DRY acronym stands for Don\'t Repeat Yourself. It states that:","sidebar":"engineeringSidebar"},"engineering/architecture/principles/gall\'s-law":{"id":"engineering/architecture/principles/gall\'s-law","title":"Gall\'s law","description":"Gall\'s law#Gall.27s_law) is a rule of thumb for systems design. It states that a complex system always has evolved from a simple system. We can\'t design a complex system from scratch: it has to start from a simple one first.","sidebar":"engineeringSidebar"},"engineering/architecture/principles/kiss":{"id":"engineering/architecture/principles/kiss","title":"KISS","description":"The KISS principle stands for Keep It Simple, Stupid!.","sidebar":"engineeringSidebar"},"engineering/architecture/principles/lehman\'s-laws":{"id":"engineering/architecture/principles/lehman\'s-laws","title":"Lehman\'s laws","description":"Lehman\'s laws are rule of thumb that apply to software evolution.","sidebar":"engineeringSidebar"},"engineering/architecture/principles/separation-of-concerns":{"id":"engineering/architecture/principles/separation-of-concerns","title":"Separation of concerns","description":"The separation of concern focus on splitting the code into distinct sections.","sidebar":"engineeringSidebar"},"engineering/architecture/principles/solid":{"id":"engineering/architecture/principles/solid","title":"SOLID","description":"The SOLID) principles is a set of good practices that focus on flexibility and maintainability. They apply especially well on OOP.","sidebar":"engineeringSidebar"},"engineering/architecture/principles/twelve-factor-app":{"id":"engineering/architecture/principles/twelve-factor-app","title":"Twelve-Factor App","description":"Twelve-Factor App is a methodology and a set of best practices to build SaaS applications.","sidebar":"engineeringSidebar"},"engineering/architecture/quality-attributes/availability":{"id":"engineering/architecture/quality-attributes/availability","title":"Availability","description":"Availability is the proportion of time a system is in a functioning condition. It is closed link with notions of performance, reliability and robustness.","sidebar":"engineeringSidebar"},"engineering/architecture/quality-attributes/interoperability":{"id":"engineering/architecture/quality-attributes/interoperability","title":"Interoperability","description":"Interoperability is a criteria that define how well a system can interact and exchange with other systems.","sidebar":"engineeringSidebar"},"engineering/architecture/quality-attributes/maintainability":{"id":"engineering/architecture/quality-attributes/maintainability","title":"Maintainability","description":"Maintainability is how making changes are easy and fast (and, by extension, cheap).","sidebar":"engineeringSidebar"},"engineering/architecture/quality-attributes/performance":{"id":"engineering/architecture/quality-attributes/performance","title":"Performance","description":"Performance defines the amount of useful work accomplished by a system. As a quality attribute, we want to response to an event arriving within some time constraint.","sidebar":"engineeringSidebar"},"engineering/architecture/quality-attributes/quality-attributes":{"id":"engineering/architecture/quality-attributes/quality-attributes","title":"Quality Attributes","description":"Quality attributes (QA) allow to do an overall assessment appreciation of a system.","sidebar":"engineeringSidebar"},"engineering/architecture/quality-attributes/scalability":{"id":"engineering/architecture/quality-attributes/scalability","title":"Scalability","description":"Scalability is the property of a system to handle a growing amount of work by adding resources to the system. For example, upgrading on or many servers\u2019 capacity.","sidebar":"engineeringSidebar"},"engineering/architecture/quality-attributes/security":{"id":"engineering/architecture/quality-attributes/security","title":"Security","description":"Note: this is an overview of security as a quality attribute. For more information, have a look at the Cyber security page.","sidebar":"engineeringSidebar"},"engineering/architecture/quality-attributes/testability":{"id":"engineering/architecture/quality-attributes/testability","title":"Testability","description":"Testability is how a system can run relevant test, usually to find problems.","sidebar":"engineeringSidebar"},"engineering/architecture/styles/api":{"id":"engineering/architecture/styles/api","title":"API","description":"Application Programming Interface (API) is a way for two or more applications/programs to communicate with each other.","sidebar":"engineeringSidebar"},"engineering/architecture/styles/client-server":{"id":"engineering/architecture/styles/client-server","title":"Client-server","description":"The client\u2013server architecture style separate workload between 2 layers: the provider of a resource or service (server) and the requester (client).","sidebar":"engineeringSidebar"},"engineering/architecture/styles/component-based":{"id":"engineering/architecture/styles/component-based","title":"Component-based","description":"Component-based architecture focus on reusability and separation of concerns principle.","sidebar":"engineeringSidebar"},"engineering/architecture/styles/finite-state-machine":{"id":"engineering/architecture/styles/finite-state-machine","title":"Finite-state machine","description":"A finite-state machine (FSM)","sidebar":"engineeringSidebar"},"engineering/architecture/styles/layered":{"id":"engineering/architecture/styles/layered","title":"Layered","description":"In layered architecture, components are organized in layers which communicate directly only with layers above and below them.","sidebar":"engineeringSidebar"},"engineering/architecture/styles/publish-subscribe":{"id":"engineering/architecture/styles/publish-subscribe","title":"Publish-subscribe","description":"The publish-subscribe pattern provides an event bus (message broker) where publishers can send messages and subscribers can receive them. One like the other don\'t have a knowledge of who are the publishers/subscribers, they just interact with this common repository.","sidebar":"engineeringSidebar"},"engineering/architecture/styles/service-oriented":{"id":"engineering/architecture/styles/service-oriented","title":"Service-oriented","description":"A service-oriented architecture (SOA) is focused around tasks or services which are distinct, autonomous and independent.","sidebar":"engineeringSidebar"},"engineering/artificial-intelligence/artificial-intelligence":{"id":"engineering/artificial-intelligence/artificial-intelligence","title":"artificial-intelligence","description":"\x3c!-- TODO","sidebar":"engineeringSidebar"},"engineering/artificial-intelligence/neural-network":{"id":"engineering/artificial-intelligence/neural-network","title":"Neural Network","description":"An Artificial Neural Network) (ANN) is an architecture in Machine Learning that imitates a brain by connecting perceptrons (i.e. artificial neurons) together.","sidebar":"engineeringSidebar"},"engineering/artificial-intelligence/nlp":{"id":"engineering/artificial-intelligence/nlp","title":"Natural Language Processing","description":"Natural Language Processing (NLP) is a field in Machine Learning giving computers the ability to support and manipulate human language.","sidebar":"engineeringSidebar"},"engineering/artificial-intelligence/rpa":{"id":"engineering/artificial-intelligence/rpa","title":"Robotic Process Automation","description":"Robotic Process Automation (RPA) is the principle to automate tasks with software bots/agents, possibly with the help of artificial intelligence.","sidebar":"engineeringSidebar"},"engineering/artificial-intelligence/supervised-learning/classification":{"id":"engineering/artificial-intelligence/supervised-learning/classification","title":"Classification","description":"We want to maximize the number of correct classifications, e.g. predict if the subject on a picture is a cat, a dog or neither.","sidebar":"engineeringSidebar"},"engineering/artificial-intelligence/supervised-learning/decision-tree":{"id":"engineering/artificial-intelligence/supervised-learning/decision-tree","title":"Decision Tree","description":"\x3c!-- TODO","sidebar":"engineeringSidebar"},"engineering/artificial-intelligence/supervised-learning/regression":{"id":"engineering/artificial-intelligence/supervised-learning/regression","title":"Regression","description":"Regression is a supervised algorithm which map inputs to an infinite set of continuous outputs. It allows to to find correlations between data, do predictions and even classification.","sidebar":"engineeringSidebar"},"engineering/artificial-intelligence/supervised-learning/supervised-learning":{"id":"engineering/artificial-intelligence/supervised-learning/supervised-learning","title":"Supervised Learning","description":"Supervised Learning is a paradigm in Machine Learning, where we train the computer to predict an output based on the input data. The dataset contains both features and targets, provided by a human.","sidebar":"engineeringSidebar"},"engineering/cyber-security/cia":{"id":"engineering/cyber-security/cia","title":"CIA","description":"The CIA triad represents the 3 main domain of information security: confidentiality, integrity and availability.","sidebar":"engineeringSidebar"},"engineering/cyber-security/cryptography/steganography":{"id":"engineering/cyber-security/cryptography/steganography","title":"Steganography","description":"Steganography is the principle to hide information in an object, such as an image, audio/video sequence, textual content, etc.","sidebar":"engineeringSidebar"},"engineering/cyber-security/cwe":{"id":"engineering/cyber-security/cwe","title":"CWE","description":"The Common Weakness Enumeration is a category system for hardware and software weaknesses and vulnerabilities. They have a useful top 25 of Most Dangerous Software Weaknesses","sidebar":"engineeringSidebar"},"engineering/cyber-security/cyber-security":{"id":"engineering/cyber-security/cyber-security","title":"Cyber security","description":"Cyber security intend to protect a system.","sidebar":"engineeringSidebar"},"engineering/cyber-security/iam":{"id":"engineering/cyber-security/iam","title":"IAM","description":"Identity and Access Management (IAM) are guidelines to ensure that the rights users have the appropriate access to resources.","sidebar":"engineeringSidebar"},"engineering/cyber-security/nist":{"id":"engineering/cyber-security/nist","title":"NIST","description":"The NIST Cybersecurity Framework consists of five core functions:","sidebar":"engineeringSidebar"},"engineering/cyber-security/owasp":{"id":"engineering/cyber-security/owasp","title":"OWASP","description":"The Open Worldwide Application Security Project is an online community focused on web application security.","sidebar":"engineeringSidebar"},"engineering/cyber-security/pdca":{"id":"engineering/cyber-security/pdca","title":"PDCA","description":"PDCA is a four-step iterative approach for continuous improvement of processes, products or services.","sidebar":"engineeringSidebar"},"engineering/cyber-security/stride":{"id":"engineering/cyber-security/stride","title":"STRIDE","description":"STRIDE) is a model to identify security threats:","sidebar":"engineeringSidebar"},"engineering/data/binary/binary":{"id":"engineering/data/binary/binary","title":"binary","description":"Sample Editor Command","sidebar":"engineeringSidebar"},"engineering/data/binary/gray-code":{"id":"engineering/data/binary/gray-code","title":"Gray code","description":"Sometimes, two values close together have an equivalent binary representation that look totally different. Gray code try to fix this issue.","sidebar":"engineeringSidebar"},"engineering/data/binary/hamming-distance":{"id":"engineering/data/binary/hamming-distance","title":"Hamming distance","description":"Hamming distance calculate how many bits change on a sequence.","sidebar":"engineeringSidebar"},"engineering/data/data":{"id":"engineering/data/data","title":"Data","description":"Data sources","sidebar":"engineeringSidebar"},"engineering/data/data-structure/data-structure":{"id":"engineering/data/data-structure/data-structure","title":"Data structure","description":"Data structure state how to organise and manage the data, trying to be as efficient as possible depending of the task. For example, we\'ll use a certain data structure that will be designed to quickly build a list, but we\'ll use another one for quick access to elements.","sidebar":"engineeringSidebar"},"engineering/data/data-structure/graph":{"id":"engineering/data/data-structure/graph","title":"Graph","description":"A graph) is a set of vertices (points) connected by edges (lines).","sidebar":"engineeringSidebar"},"engineering/data/data-structure/hash":{"id":"engineering/data/data-structure/hash","title":"Hash","description":"A hash table (or *hash map*) store large amounts of data. Hash function are used to keep track of it.","sidebar":"engineeringSidebar"},"engineering/data/data-structure/heap/fibonacci-heap":{"id":"engineering/data/data-structure/heap/fibonacci-heap","title":"Fibonacci Heap","description":"Fibonacci heap is a heap data-structure that mimics the fibonacci sequence. It is very interesting to use to find Minimum Spanning Tree and single source shortest path, like in Dijkstra algorithm.","sidebar":"engineeringSidebar"},"engineering/data/data-structure/heap/heap":{"id":"engineering/data/data-structure/heap/heap","title":"Heap","description":"Heap) are like tree data structures that satisfies the heap property. It means it\'s easier to do operations on the lowest/highest values.","sidebar":"engineeringSidebar"},"engineering/data/data-structure/tree":{"id":"engineering/data/data-structure/tree","title":"Tree","description":"A tree) is a hierarchical data structure close to a graph, with some constraints:","sidebar":"engineeringSidebar"},"engineering/data/database/nosql/column":{"id":"engineering/data/database/nosql/column","title":"Column","description":"A column-oriented database stores data in tables, organized by columns, whereas rdbms organize data in rows.","sidebar":"engineeringSidebar"},"engineering/data/database/nosql/document":{"id":"engineering/data/database/nosql/document","title":"Document","description":"A document-oriented database store complex data structure in text format (XML, JSON). Like key-value databases, it is identified by a key-value pair where the value is the structured document. It is flexible, robust and human-readable.","sidebar":"engineeringSidebar"},"engineering/data/database/nosql/graph":{"id":"engineering/data/database/nosql/graph","title":"Graph","description":"A graph database is suited to follow relations between objects. Data represented as a node with hierarchical relationships. It is complex to build and its architecture is modular.","sidebar":"engineeringSidebar"},"engineering/data/database/nosql/key-value":{"id":"engineering/data/database/nosql/key-value","title":"Key-Value","description":"A key-value pair is a tuple of two strings: a unique identifier (key) associated to a value.","sidebar":"engineeringSidebar"},"engineering/data/database/nosql/nosql":{"id":"engineering/data/database/nosql/nosql","title":"NoSQL","description":"A NoSQL system propose a different architecture than the one based on tables, found in rdbms","sidebar":"engineeringSidebar"},"engineering/data/database/rdbms":{"id":"engineering/data/database/rdbms","title":"RDBMS","description":"A relational database is a type of database that stores information in tables that are related to each other. It is sometimes referred to as a Relational Database Management System (RDBMS). This architecture is in contrast to NoSQL","sidebar":"engineeringSidebar"},"engineering/data/database/sharding":{"id":"engineering/data/database/sharding","title":"Sharding","description":"Sharding) is subdividing a database into smaller pieces called shards. Placing shards on multiple machines improve performances as it split workload (same principle as load balancer).","sidebar":"engineeringSidebar"},"engineering/data/glossary/gigo":{"id":"engineering/data/glossary/gigo","title":"Garbage In, Garbage Out","description":"GIGO refers to Garbage In, Garbage Out. It basically means that poor quality input data will result in poor quality output data. That could involve data that is outdated, flawed, inexact, biased, incomplete, etc.","sidebar":"engineeringSidebar"},"engineering/data/types/date":{"id":"engineering/data/types/date","title":"Date types","description":"A data type define a range of possible values and what operations is allow on these values. For example, output differs if you addition two numbers, strings, dates, etc.","sidebar":"engineeringSidebar"},"engineering/data/types/numeric":{"id":"engineering/data/types/numeric","title":"Numeric types","description":"Float","sidebar":"engineeringSidebar"},"engineering/data/types/types":{"id":"engineering/data/types/types","title":"Data types","description":"We use different kind of data, with different properties (e.g. range of values), to achieve different tasks. For example, adding dates or numbers work differently. That\'s why we use data types.","sidebar":"engineeringSidebar"},"engineering/devops/ci-cd":{"id":"engineering/devops/ci-cd","title":"CI/CD","description":"CI/CD stands for continuous integration and continuous delivery, sometimes continuous deployment. It focus on the automatisation in building, testing and deployment of applications.","sidebar":"engineeringSidebar"},"engineering/devops/devops":{"id":"engineering/devops/devops","title":"DevOps","description":"DevOps is a set of practice that combine software development (Dev) and IT operations (Ops).","sidebar":"engineeringSidebar"},"engineering/devops/glossary/pet-vs-cattle":{"id":"engineering/devops/glossary/pet-vs-cattle","title":"Pet vs. Cattle","description":"Pets vs. Cattle is a famous analogy for infrastructure and server management.","sidebar":"engineeringSidebar"},"engineering/devops/monorepo":{"id":"engineering/devops/monorepo","title":"Monorepo","description":"Resources","sidebar":"engineeringSidebar"},"engineering/devops/unit-testing":{"id":"engineering/devops/unit-testing","title":"Unit testing","description":"In unit testing, you test individual unity of source code to determine whether they are fit for use.","sidebar":"engineeringSidebar"},"engineering/devops/virtualization":{"id":"engineering/devops/virtualization","title":"Virtualization","description":"Hypervisor","sidebar":"engineeringSidebar"},"engineering/engineering":{"id":"engineering/engineering","title":"Engineering","description":"Resources","sidebar":"engineeringSidebar"},"engineering/infrastructure/cloud/as-a-service":{"id":"engineering/infrastructure/cloud/as-a-service","title":"As a Service","description":"The term As\xa0a Service defines a model of index architecture. It summarizes how software, infrastructure, platforms, and other services are delivered over a network. It defines which parts of a product are handled by the user or the provider.","sidebar":"engineeringSidebar"},"engineering/infrastructure/cloud/cloud":{"id":"engineering/infrastructure/cloud/cloud","title":"Cloud","description":"Cloud computing can be define as a cluster of servers that share storage and power on-demand with users. Its core feature is the provision of IT infrastructure and applications as a service in scalable way.","sidebar":"engineeringSidebar"},"engineering/infrastructure/cloud/edge-computing":{"id":"engineering/infrastructure/cloud/edge-computing","title":"Edge Computing","description":"Edge Computing is a cloud architecture/paradigm that tends to bring computation and storage closer to the sources of data by placing servers around the cloud.","sidebar":"engineeringSidebar"},"engineering/infrastructure/cloud/glossary/pets-vs.-cattle":{"id":"engineering/infrastructure/cloud/glossary/pets-vs.-cattle","title":"Pets vs Cattle","description":"Pets vs. Cattle is a famous analogy for infrastructure and server management.","sidebar":"engineeringSidebar"},"engineering/infrastructure/cloud/glossary/serverless":{"id":"engineering/infrastructure/cloud/glossary/serverless","title":"Serverless","description":"Serverless computing is a cloud computing model in which user can build and run application without requiring server management. The cloud provider runs the server, and dynamically handle the allocation of machine resources: storage, CPU, RAM, etc.","sidebar":"engineeringSidebar"},"engineering/infrastructure/cloud/infrastructure-as-code":{"id":"engineering/infrastructure/cloud/infrastructure-as-code","title":"Infrastructure as Code","description":"Infrastructure as Code (IaC) is a way of managing servers, data centers and networks using code instead of manual processes. This allows for more efficient and automated management of IT infrastructure, as well as features like versioning, continuous integration, automated testing, code review, etc.","sidebar":"engineeringSidebar"},"engineering/infrastructure/cloud/iot":{"id":"engineering/infrastructure/cloud/iot","title":"IoT","description":"The Internet of Things describes connected objects with sensors that share data with other devices and systems over a network.","sidebar":"engineeringSidebar"},"engineering/infrastructure/cloud/load-balancing":{"id":"engineering/infrastructure/cloud/load-balancing","title":"Load balancing","description":"Load balancing) is the principle of efficiently distributing tasks over resources to avoid overload.","sidebar":"engineeringSidebar"},"engineering/infrastructure/cloud/virtualization":{"id":"engineering/infrastructure/cloud/virtualization","title":"Virtualization","description":"Containers","sidebar":"engineeringSidebar"},"engineering/infrastructure/network/glossary/bna":{"id":"engineering/infrastructure/network/glossary/bna","title":"Broad Network Access","description":"Broad Network Access (BNA) define that applications/capabilities can be access on a machine via standard mechanisms.","sidebar":"engineeringSidebar"},"engineering/infrastructure/network/glossary/readme":{"id":"engineering/infrastructure/network/glossary/readme","title":"readme","description":"*","sidebar":"engineeringSidebar"},"engineering/infrastructure/network/protocols":{"id":"engineering/infrastructure/network/protocols","title":"Protocols","description":"Stateless / Stateful","sidebar":"engineeringSidebar"},"engineering/infrastructure/os/kernel":{"id":"engineering/infrastructure/os/kernel","title":"Kernel","description":"The kernel) is a central part of the operating system. It communicates with the hardware and manage resources, such as memory, drivers, processes, network, files, etc.","sidebar":"engineeringSidebar"},"engineering/infrastructure/web/web":{"id":"engineering/infrastructure/web/web","title":"Web","description":"Browser from Scratch \u2013 Introduction","sidebar":"engineeringSidebar"},"engineering/maths/algebra/algebra":{"id":"engineering/maths/algebra/algebra","title":"Linear algebra","description":"Linear algebra is a branch of mathematics that focus on trying to solve linear equations. It includes vectors and matrices.","sidebar":"engineeringSidebar"},"engineering/maths/algebra/derivative":{"id":"engineering/maths/algebra/derivative","title":"Derivative","description":"Derivative) show the amount by which a function is changing at one given point. It\'s particularly used to calculate the slope of a function.","sidebar":"engineeringSidebar"},"engineering/maths/algebra/function":{"id":"engineering/maths/algebra/function","title":"Function","description":"A function) is a mathematical object that takes an input and produces an output (number, vector, etc).","sidebar":"engineeringSidebar"},"engineering/maths/algebra/integral":{"id":"engineering/maths/algebra/integral","title":"Integral","description":"An integral defines the area under the curve of a function. It\'s the reverse of a derivative","sidebar":"engineeringSidebar"},"engineering/maths/algebra/sets":{"id":"engineering/maths/algebra/sets","title":"Sets","description":"Mathematical sets) are collections of objects that can represent different things, such as numbers, variables, and shapes. They are useful for defining relationships and connections between objects, as well as for statistical and analytical purposes.","sidebar":"engineeringSidebar"},"engineering/maths/algebra/vectors":{"id":"engineering/maths/algebra/vectors","title":"Vectors","description":"Vector: size and direction","sidebar":"engineeringSidebar"},"engineering/maths/maths":{"id":"engineering/maths/maths","title":"Mathematics","description":"Resources","sidebar":"engineeringSidebar"},"engineering/maths/physics/energy":{"id":"engineering/maths/physics/energy","title":"Energy","description":"Energy is a property of matter and space.","sidebar":"engineeringSidebar"},"engineering/maths/physics/motion":{"id":"engineering/maths/physics/motion","title":"Motion","description":"Newton\'s laws","sidebar":"engineeringSidebar"},"engineering/maths/physics/physics":{"id":"engineering/maths/physics/physics","title":"Physics","description":"","sidebar":"engineeringSidebar"},"index":{"id":"index","title":"Welcome","description":"What is this ?"},"management/agile/agile":{"id":"management/agile/agile","title":"Agile","description":"Agile is a project management methodology for software development based on communication and collaboration between teams, including the client.","sidebar":"managementSidebar"},"management/agile/kanban":{"id":"management/agile/kanban","title":"Kanban","description":"Kanban) is a simple scheduling system in project management.","sidebar":"managementSidebar"},"management/agile/lean":{"id":"management/agile/lean","title":"Lean","description":"Lean","sidebar":"managementSidebar"},"management/agile/safe":{"id":"management/agile/safe","title":"SAFe","description":"Scaled Agile Framework (SAFe) focus the big picture view. It\'s a bit less flexible than other frameworks.","sidebar":"managementSidebar"},"management/agile/scrum":{"id":"management/agile/scrum","title":"Scrum","description":"Scrum) is an Agile framework designed for small teams (10 or less). Small pieces of work are delivered frequently, at each sprints.","sidebar":"managementSidebar"},"management/agile/xp":{"id":"management/agile/xp","title":"XP","description":"Extreme programing (XP) is an Agile methodology focused on technical features and programming quality.","sidebar":"managementSidebar"},"management/estimation":{"id":"management/estimation","title":"Estimation","description":"In Agile methodologies, some principles and tools are often used for planning and time estimation.","sidebar":"managementSidebar"},"management/glossary/mooc":{"id":"management/glossary/mooc","title":"MOOC","description":"MOOC stands for Massive Online Open Course. It\'s basically distance formations that can target large groups. It\'s usually interactive, including forums, social media discussions, quizz, etc.","sidebar":"managementSidebar"},"management/glossary/tco":{"id":"management/glossary/tco","title":"Total Cost of Ownership","description":"Total Cost of Ownership (TCO) represents the sum of operating expense (OPEX) and capital expenses (CAPEX).","sidebar":"managementSidebar"},"management/management":{"id":"management/management","title":"Management","description":"","sidebar":"managementSidebar"},"management/marketing/crm":{"id":"management/marketing/crm","title":"Customer Relationship Management","description":"CRM","sidebar":"managementSidebar"},"management/marketing/erp":{"id":"management/marketing/erp","title":"Entreprise Resources Planning","description":"ERP are business software to manage activities and resources, like money, product quantity, stock, clients, etc.","sidebar":"managementSidebar"},"management/marketing/glossary/dumping":{"id":"management/marketing/glossary/dumping","title":"Dumping","description":"Dumping) is when an entreprise sell a product at very low prices to win market shares and destroy concurrency. It\'s considered unfair and often illegal.","sidebar":"managementSidebar"},"management/marketing/glossary/nih":{"id":"management/marketing/glossary/nih","title":"Not Invented Here","description":"Not invented here, also known as NIH syndrome, is the tendency to avoid product, services or information that come from the outside.","sidebar":"managementSidebar"},"management/marketing/glossary/usp":{"id":"management/marketing/glossary/usp","title":"USP","description":"The unique selling proposition (USP) is the core value of a brand or product that make it superior to its competitors. It is often used as a tagline.","sidebar":"managementSidebar"},"management/marketing/marketing-mix":{"id":"management/marketing/marketing-mix","title":"Marketing mix","description":"Marketing mix resume domains that a company uses to pursue its objectives in the market.","sidebar":"managementSidebar"},"management/marketing/models/golden-circle":{"id":"management/marketing/models/golden-circle","title":"Golden Circle","description":"The golden circle is a schema to define the purpose of an entreprise. It states that you should start with the center of the circle and move to the outside, not the opposite.","sidebar":"managementSidebar"},"management/marketing/product-lifecycle":{"id":"management/marketing/product-lifecycle","title":"Product lifecycle","description":"The product Lifecycle define the life of service or product in 4 steps:","sidebar":"managementSidebar"},"management/marketing/story-telling":{"id":"management/marketing/story-telling","title":"Story telling","description":"Hero\'s Journey","sidebar":"managementSidebar"},"management/models/eisenhower-matrix":{"id":"management/models/eisenhower-matrix","title":"Eisenhower matrix","description":"The Eisenhower matrix manage tasks in 4 quadrants, classifying them by degree of importance and urgence.","sidebar":"managementSidebar"},"management/models/pareto":{"id":"management/models/pareto","title":"Pareto","description":"The Pareto principle state that roughly 80% of consequences come from 20% of causes.","sidebar":"managementSidebar"},"management/models/pestel":{"id":"management/models/pestel","title":"PESTEL","description":"PESTEL is a model to analyse strategical management according to the environmental influences. It\'s a useful mnemonic to look core domains related to the current market situation.","sidebar":"managementSidebar"},"management/models/swot":{"id":"management/models/swot","title":"SWOT","description":"SWOT is a model to identify Strengths, Weaknesses, Opportunities and Threats related to business competition and project planning.","sidebar":"managementSidebar"},"management/models/vuca":{"id":"management/models/vuca","title":"VUCA","description":"VUCA is a model to describe how the environment change. It\'s especially used to act in crisis situation.","sidebar":"managementSidebar"},"ux/glossary/affordance":{"id":"ux/glossary/affordance","title":"Affordance","description":"Affordance is the ability of an element to make its usage explicit.","sidebar":"uxSidebar"},"ux/glossary/ergonomy":{"id":"ux/glossary/ergonomy","title":"Ergonomy","description":"Ergonomy is the field of study focusing on the interaction between human and a system\'s components. It intends to maximize productivity by reducing operator fatigue and discomfort.","sidebar":"uxSidebar"},"ux/glossary/skeuomorphism":{"id":"ux/glossary/skeuomorphism","title":"Skeumorphism","description":"Skeumorphism is a design trends that tend to imitates real-life object in interface or other object, usually to suggest their function and how to interact with.","sidebar":"uxSidebar"},"ux/glossary/tui":{"id":"ux/glossary/tui","title":"TUI","description":"A Tangible User Interface, or TUI, is a physical object / device that can be used to interact with digital elements.","sidebar":"uxSidebar"},"ux/glossary/usability":{"id":"ux/glossary/usability","title":"Usability","description":"Usability is a quality attribute that assesses how easy user interfaces are to use.","sidebar":"uxSidebar"},"ux/guides/design-principles":{"id":"ux/guides/design-principles","title":"6 Design Principles","description":"By Don Norman","sidebar":"uxSidebar"},"ux/guides/golden-rules-of-ui":{"id":"ux/guides/golden-rules-of-ui","title":"8 Golden Rules of UI","description":"The 8 Golden Rules of Interface Design by Ben Shneiderman","sidebar":"uxSidebar"},"ux/guides/usability-heuristics":{"id":"ux/guides/usability-heuristics","title":"10 Usability Heuristics","description":"The 10 Usability Heuristics are rules of thumb for user interface design, by Jakob Nielsen).","sidebar":"uxSidebar"},"ux/principles/campbell-law":{"id":"ux/principles/campbell-law","title":"Campbell\'s law","description":"Campbell\'s law state that hen people rely a lot on numbers to make decisions, those numbers can become vulnerable to corruption and might actually make things worse instead of better.","sidebar":"uxSidebar"},"ux/principles/fitt-law":{"id":"ux/principles/fitt-law","title":"Fitt\'s law","description":"Fitt\'s law define that the time to reach a surface is proportional to the distance and size of its surface.","sidebar":"uxSidebar"},"ux/principles/gestalt":{"id":"ux/principles/gestalt","title":"Gestalt","description":"Gestalt psychology is a theory of mind that states that the brain see things likes figures and forms as a whole.","sidebar":"uxSidebar"},"ux/principles/latch":{"id":"ux/principles/latch","title":"LATCH","description":"The LATCH principle is a mnemotechnic to organise information.","sidebar":"uxSidebar"},"ux/tests":{"id":"ux/tests","title":"Tests","description":"- 5 second Testing: check what are the very first element the user see","sidebar":"uxSidebar"},"ux/tools/cognitive-walkthrough":{"id":"ux/tools/cognitive-walkthrough","title":"Cognitive walkthrough","description":"A cognitive walkthrough is a method to analyze us[usability a system which focus on each step a user take:","sidebar":"uxSidebar"},"ux/tools/likert-scale":{"id":"ux/tools/likert-scale","title":"Likert scale","description":"Likert scale is a questionnaire where answers can be rated from 1 to 5 to say at which point you agree with the proposed sentence.","sidebar":"uxSidebar"},"ux/ui":{"id":"ux/ui","title":"UI","description":"Resources","sidebar":"uxSidebar"},"ux/ux":{"id":"ux/ux","title":"User Experience","description":"User Experience is how a user will interacts and experience a product, system or service. It measures the quality of the user journey in digital or physical environments, including the context, emotion, etc.","sidebar":"uxSidebar"}}}}')}}]);