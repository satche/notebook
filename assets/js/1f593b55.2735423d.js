"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[5897],{373:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>c,toc:()=>o});var t=r(4848),i=r(8453);const s={aliases:[],tags:[]},a="Performance",c={id:"engineering/architecture/quality-attributes/performance",title:"Performance",description:"Performance defines the amount of useful work accomplished by a system. As a quality attribute, we want to response to an event arriving within some time constraint.",source:"@site/docs/engineering/architecture/quality-attributes/performance.md",sourceDirName:"engineering/architecture/quality-attributes",slug:"/engineering/architecture/quality-attributes/performance",permalink:"/notebook/engineering/architecture/quality-attributes/performance",draft:!1,unlisted:!1,editUrl:"https://github.com/satche/notebook/tree/main/docs/engineering/architecture/quality-attributes/performance.md",tags:[],version:"current",lastUpdatedAt:1721721519e3,frontMatter:{aliases:[],tags:[]},sidebar:"engineeringSidebar",previous:{title:"Maintainability",permalink:"/notebook/engineering/architecture/quality-attributes/maintainability"},next:{title:"Scalability",permalink:"/notebook/engineering/architecture/quality-attributes/scalability"}},l={},o=[{value:"Scenario",id:"scenario",level:2},{value:"Example",id:"example",level:3},{value:"Tactics",id:"tactics",level:2},{value:"Resource Demand",id:"resource-demand",level:3},{value:"Resource management",id:"resource-management",level:3}];function d(e){const n={a:"a",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"performance",children:"Performance"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://wikipedia.org/wiki/computer_performance",children:"Performance"})," defines the amount of useful work accomplished by a system. As a quality attribute, we want to response to an event arriving within some time constraint."]}),"\n",(0,t.jsx)(n.h2,{id:"scenario",children:"Scenario"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Source"}),": external, internal"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Stimulus"}),": event arrival pattern (fixed frequency, probability, random)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Artifact"}),": system services"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Environment"}),": normal, overload"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Response"}),": change operation mode ?"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Measure"}),": latency, deadline, throughput, miss rate, data loss"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,t.jsx)(n.p,{children:"Performance on crossing gate controller"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Source"}),": external (arriving train)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Stimulus"}),":"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Artifact"}),": system services"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Environment"}),": normal, overload"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Response"}),": change operation mode ?"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Measure"}),": latency, deadline, throughput, miss rate, data loss"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"tactics",children:"Tactics"}),"\n",(0,t.jsx)(n.p,{children:"Resources examples: CPU, RAM, storage, network, etc."}),"\n",(0,t.jsx)(n.h3,{id:"resource-demand",children:"Resource Demand"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Relevant algorithms"}),"\n",(0,t.jsx)(n.li,{children:"Threading / multi-threading / parallelism"}),"\n",(0,t.jsx)(n.li,{children:"Reduce data (size, frequency)"}),"\n",(0,t.jsx)(n.li,{children:"Reduce code, refactoring"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"resource-management",children:"Resource management"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Concurrency (horizontal scaling)"}),"\n",(0,t.jsx)(n.li,{children:"Maintain copies (e.g. system state)"}),"\n",(0,t.jsx)(n.li,{children:"Allocation according to task"}),"\n",(0,t.jsx)(n.li,{children:"Arbitration among components"}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>c});var t=r(6540);const i={},s=t.createContext(i);function a(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);