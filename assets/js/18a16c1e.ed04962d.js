"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[2633],{5571:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>a});var t=s(4848),o=s(8453);const r={aliases:[],tags:[]},l="Kubernetes",i={id:"code/tools/kubernetes",title:"Kubernetes",description:"Components",source:"@site/docs/code/tools/kubernetes.md",sourceDirName:"code/tools",slug:"/code/tools/kubernetes",permalink:"/notebook/code/tools/kubernetes",draft:!1,unlisted:!1,editUrl:"https://github.com/satche/notebook/tree/main/docs/code/tools/kubernetes.md",tags:[],version:"current",lastUpdatedAt:1721721519e3,frontMatter:{aliases:[],tags:[]},sidebar:"codeSidebar",previous:{title:"Docker",permalink:"/notebook/code/tools/docker"},next:{title:"Terraform",permalink:"/notebook/code/tools/terraform"}},c={},a=[{value:"Components",id:"components",level:2},{value:"Manifest",id:"manifest",level:3},{value:"Pods",id:"pods",level:3},{value:"Services",id:"services",level:3},{value:"Deployments",id:"deployments",level:3},{value:"Resources",id:"resources",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"kubernetes",children:"Kubernetes"}),"\n",(0,t.jsx)(n.h2,{id:"components",children:"Components"}),"\n",(0,t.jsx)(n.h3,{id:"manifest",children:"Manifest"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"$ kubectl create -f deploy.yaml # Create manifest file\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Pod # Deployment, Service, \u2026\nmetadata:\n\tname: redis\n\tlabels:\t\t\n\t\tapp: todo\n\t\tcomponent: redis\nspec:\n\tcontainers:\n\t- name: redis\n\t  image: redis # docker image\n\t- ports:\n\t\t- containerPort: 6379\n\t- resources:\n\t\t- limits:\n\t\t- cpu: 100m\n\t- args:\n\t\t- redis-server\n\t\t- --requirepass ccp2\n\t\t- --appendonly yes\n"})}),"\n",(0,t.jsx)(n.h3,{id:"pods",children:"Pods"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"$ kubectl get pods # List all pods\n$ kubectl delete pod <name>\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Set of 1 or more container"}),"\n",(0,t.jsxs)(n.li,{children:["Containers share the same environment (tightly-coupled)","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Memory"}),"\n",(0,t.jsx)(n.li,{children:"Storage volumes"}),"\n",(0,t.jsx)(n.li,{children:"Network (same IP. They use localhost to communicate between them)"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/notebook/engineering/devops/glossary/pet-vs-cattle#cattle",children:"Cattle"})," strategy: if a container fail, whole pod is recreated from scratch"]}),"\n",(0,t.jsx)(n.li,{children:"Labels: key-value tag assigned to pods to help services target them with queries"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"services",children:"Services"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"$ kubectl get svc #\xa0List all services\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Regroup a set of pods into a single resource"}),"\n",(0,t.jsx)(n.li,{children:"Provide an endpoint to incoming pods"}),"\n",(0,t.jsx)(n.li,{children:"Load-balances the incoming request"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Three types of load balancing"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"ClusterIP"})," \u2013 Most common one. Can't be access from the outside of the cluster"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"NodePort"})," \u2013 Can be access from outside with ",(0,t.jsx)(n.code,{children:"<node_ip>:<node_port>"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"LoadBalancer"})," \u2013 Use the cloud provider load-balancer on top of NodePort"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"deployments",children:"Deployments"}),"\n",(0,t.jsx)(n.p,{children:"Rolling update: push changes without interrupting the service by creating a new replica set"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"$ kubectl get deployments # List running, updated and available replicas\n$ kubectl rollout status <name>\n"})}),"\n",(0,t.jsx)(n.h2,{id:"resources",children:"Resources"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://kubernetes.io/",children:"kubernetes.io"})," \u2013 Official website"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>i});var t=s(6540);const o={},r=t.createContext(o);function l(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);