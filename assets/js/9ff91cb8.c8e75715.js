"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[3007],{4240:e=>{e.exports=JSON.parse('{"tag":{"label":"data-structure","permalink":"/notebook/tags/data-structure","allTagsPath":"/notebook/tags","count":5,"items":[{"id":"engineering/data/data-structure/heap/fibonacci-heap","title":"Fibonacci Heap","description":"Fibonacci heap is a heap data-structure that mimics the fibonacci sequence. It is very interesting to use to find Minimum Spanning Tree and single source shortest path, like in Dijkstra algorithm.","permalink":"/notebook/engineering/data/data-structure/heap/fibonacci-heap"},{"id":"engineering/data/data-structure/graph","title":"Graph","description":"A graph) is a set of vertices (points) connected by edges (lines).","permalink":"/notebook/engineering/data/data-structure/graph"},{"id":"engineering/data/data-structure/hash","title":"Hash","description":"A hash table (or *hash map*) store large amounts of data. Hash function are used to keep track of it.","permalink":"/notebook/engineering/data/data-structure/hash"},{"id":"engineering/data/data-structure/heap/heap","title":"Heap","description":"Heap) are like tree data structures that satisfies the heap property. It means it\'s easier to do operations on the lowest/highest values.","permalink":"/notebook/engineering/data/data-structure/heap/"},{"id":"engineering/data/data-structure/tree","title":"Tree","description":"A tree) is a hierarchical data structure close to a graph, with some constraints:","permalink":"/notebook/engineering/data/data-structure/tree"}],"unlisted":false}}')}}]);