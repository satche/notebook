"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[7686],{8853:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>c});var a=n(4848),s=n(8453);const i={aliases:[],tags:[]},o="Pet vs. Cattle",r={id:"engineering/devops/glossary/pet-vs-cattle",title:"Pet vs. Cattle",description:"Pets vs. Cattle is a famous analogy for infrastructure and server management.",source:"@site/docs/engineering/devops/glossary/pet-vs-cattle.md",sourceDirName:"engineering/devops/glossary",slug:"/engineering/devops/glossary/pet-vs-cattle",permalink:"/notebook/engineering/devops/glossary/pet-vs-cattle",draft:!1,unlisted:!1,editUrl:"https://github.com/satche/notebook/tree/main/docs/engineering/devops/glossary/pet-vs-cattle.md",tags:[],version:"current",lastUpdatedAt:1721721519e3,frontMatter:{aliases:[],tags:[]},sidebar:"engineeringSidebar",previous:{title:"CI/CD",permalink:"/notebook/engineering/devops/ci-cd"},next:{title:"Monorepo",permalink:"/notebook/engineering/devops/monorepo"}},l={},c=[{value:"Pets",id:"pets",level:2},{value:"Cattle",id:"cattle",level:2}];function d(e){const t={a:"a",h1:"h1",h2:"h2",header:"header",p:"p",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"pet-vs-cattle",children:"Pet vs. Cattle"})}),"\n",(0,a.jsx)(t.p,{children:"Pets vs. Cattle is a famous analogy for infrastructure and server management."}),"\n",(0,a.jsx)(t.h2,{id:"pets",children:"Pets"}),"\n",(0,a.jsx)(t.p,{children:"Each system is treated individually and considered unique, with specific configuration and manual maintenance. It offers high control, personalization, and flexibility, but is expensive."}),"\n",(0,a.jsxs)(t.p,{children:["Examples: physical server, ",(0,a.jsx)(t.a,{href:"/notebook/engineering/devops/virtualization#virtual-machines",children:"Virtual Machines"})]}),"\n",(0,a.jsx)(t.h2,{id:"cattle",children:"Cattle"}),"\n",(0,a.jsx)(t.p,{children:"Systems are considered as interchangeable groups. Configuration is standardized and maintenance is automated. It offers high scalability and availability at a low cost, but lacks standardization, flexibility, and control."}),"\n",(0,a.jsxs)(t.p,{children:["Examples: ",(0,a.jsx)(t.a,{href:"/notebook/engineering/devops/virtualization#containerization",children:"Containerization"})]})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>r});var a=n(6540);const s={},i=a.createContext(s);function o(e){const t=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),a.createElement(i.Provider,{value:t},e.children)}}}]);