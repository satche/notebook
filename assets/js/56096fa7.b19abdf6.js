"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[9795],{2330:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>n,metadata:()=>a,toc:()=>b});var r=s(4848),i=s(8453);const n={aliases:["Pub-Sub","Pub/Sub"],tags:[]},o="Publish-subscribe",a={id:"engineering/architecture/styles/publish-subscribe",title:"Publish-subscribe",description:"The publish-subscribe pattern provides an event bus (message broker) where publishers can send messages and subscribers can receive them. One like the other don't have a knowledge of who are the publishers/subscribers, they just interact with this common repository.",source:"@site/docs/engineering/architecture/styles/publish-subscribe.md",sourceDirName:"engineering/architecture/styles",slug:"/engineering/architecture/styles/publish-subscribe",permalink:"/notebook/engineering/architecture/styles/publish-subscribe",draft:!1,unlisted:!1,editUrl:"https://github.com/satche/notebook/tree/main/docs/engineering/architecture/styles/publish-subscribe.md",tags:[],version:"current",lastUpdatedAt:1721721519e3,frontMatter:{aliases:["Pub-Sub","Pub/Sub"],tags:[]},sidebar:"engineeringSidebar",previous:{title:"Layered",permalink:"/notebook/engineering/architecture/styles/layered"},next:{title:"Service-oriented",permalink:"/notebook/engineering/architecture/styles/service-oriented"}},c={},b=[];function u(e){const t={a:"a",h1:"h1",p:"p",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"publish-subscribe",children:"Publish-subscribe"}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.a,{href:"https://wikipedia.org/wiki/publish%e2%80%93subscribe_pattern",children:"publish-subscribe"})," pattern provides an event bus (",(0,r.jsx)(t.a,{href:"https://wikipedia.org/wiki/message_broker",children:"message broker"}),") where publishers can send messages and subscribers can receive them. One like the other don't have a knowledge of who are the publishers/subscribers, they just interact with this common repository."]}),"\n",(0,r.jsxs)(t.p,{children:["It's similar to the ",(0,r.jsx)(t.a,{href:"/notebook/engineering/architecture/patterns/blackboard",children:"Blackboard"})," architecture, but events are shared instead of data. It's also similar to ",(0,r.jsx)(t.a,{href:"/notebook/engineering/architecture/patterns/observer",children:"observer"})," pattern, but the publishers don't have to maintain a list of subscriber, which is handled by the event bus."]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>a});var r=s(6540);const i={},n=r.createContext(i);function o(e){const t=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(n.Provider,{value:t},e.children)}}}]);