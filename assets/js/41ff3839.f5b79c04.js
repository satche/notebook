"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[7751],{6256:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var t=i(4848),r=i(8453);const s={aliases:["Reliability","Performance","Robustness","Fault tolerance"],tags:[]},l="Availability",o={id:"engineering/architecture/quality-attributes/availability",title:"Availability",description:"Availability is the proportion of time a system is in a functioning condition. It is closed link with notions of performance, reliability and robustness.",source:"@site/docs/engineering/architecture/quality-attributes/availability.md",sourceDirName:"engineering/architecture/quality-attributes",slug:"/engineering/architecture/quality-attributes/availability",permalink:"/notebook/engineering/architecture/quality-attributes/availability",draft:!1,unlisted:!1,editUrl:"https://github.com/satche/notebook/tree/main/docs/engineering/architecture/quality-attributes/availability.md",tags:[],version:"current",lastUpdatedAt:1721721519e3,frontMatter:{aliases:["Reliability","Performance","Robustness","Fault tolerance"],tags:[]},sidebar:"engineeringSidebar",previous:{title:"Quality Attributes",permalink:"/notebook/engineering/architecture/quality-attributes/"},next:{title:"Interoperability",permalink:"/notebook/engineering/architecture/quality-attributes/interoperability"}},a={},c=[{value:"Scenario",id:"scenario",level:2},{value:"Tactics",id:"tactics",level:2},{value:"Fault detection",id:"fault-detection",level:3},{value:"Faults recovery",id:"faults-recovery",level:3},{value:"Preparation &amp; Repair",id:"preparation--repair",level:4},{value:"Reintroduction",id:"reintroduction",level:4},{value:"Faults prevention",id:"faults-prevention",level:3}];function d(e){const n={a:"a",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"availability",children:"Availability"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://wikipedia.org/wiki/availability",children:"Availability"})," is the proportion of time a system is in a functioning condition. It is closed link with notions of performance, reliability and robustness."]}),"\n",(0,t.jsx)(n.p,{children:"Robustness = Fault Tolerance + Recoverability"}),"\n",(0,t.jsx)(n.h2,{id:"scenario",children:"Scenario"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Source"}),"\nInternal or external from the system"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Stimulus"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Omission: a component fails to respond to an input"}),"\n",(0,t.jsx)(n.li,{children:"Crash: a component repeatedly suffers omission faults"}),"\n",(0,t.jsx)(n.li,{children:"Timing: a component responds too late/early"}),"\n",(0,t.jsx)(n.li,{children:"Response: a component responds with an incorrect value"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Artifact"}),"\nProcessor, process, communication channel, storage"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Environment"}),"\nNormal mode / save mode, first failure, repeated failure"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Response"}),"\nFault detection and isolation, recovery, user/system notifications"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Measure"}),"\nAvailability percentage/intervals, time to detect/repair"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"tactics",children:"Tactics"}),"\n",(0,t.jsx)(n.h3,{id:"fault-detection",children:"Fault detection"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Ping/echo"})}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Monitoring"}),": display errors in real-time (like car warning lights)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Heartbeat"}),": send a health-check every at a certain frequency"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Timestamp"}),": detect incoherences in a sequence of event."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Sanity check"}),": data-validation (e.g. checksum)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Voting"}),": find aberrations according the mean of data coming from multiple sources."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Exception detection"}),": variable length, data-type, division by 0, etc."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Self-test"}),": component run process to regulate itself. It requires it to be isolated to avoid being influenced."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"faults-recovery",children:"Faults recovery"}),"\n",(0,t.jsx)(n.h4,{id:"preparation--repair",children:"Preparation & Repair"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"https://wikipedia.org/wiki/redundancy_(engineering)",children:"Redundancy"})}),": data duplication (",(0,t.jsx)(n.a,{href:"https://wikipedia.org/wiki/hot_spare",children:"hot spare"}),", ",(0,t.jsx)(n.a,{href:"https://wikipedia.org/wiki/raid",children:"RAID"}),", etc.)"]}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Exception handling"})}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Rollback"}),": come back to last known functional state"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Upgrades"}),": patches and fixes on one, many or all nodes"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Retry"}),": sometimes, rebooting solve the problem, especially in instable domains (network, sensors, \u2026)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Ignore"}),": sometimes, error is not critical enough"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Degradation"}),": sacrifice components or features"]}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Reconfiguration"})}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"reintroduction",children:"Reintroduction"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Shadowing"}),": limit components or features (e.g. save boot mode on an OS)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"State synchronization"}),": backup and redundancy of functional state before crash"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Escalating restart"}),": reactivate components step-by-step, with different levels of granularity"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"faults-prevention",children:"Faults prevention"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Removal from service"}),": taking components offline"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Transactions"}),": canceling on error (e.g. ACID)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Prediction"}),": anticipation (e.g. high workload among time)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Increase Competence Set"}),": hire domain professionals"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>o});var t=i(6540);const r={},s=t.createContext(r);function l(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);