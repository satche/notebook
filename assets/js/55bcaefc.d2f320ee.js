"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[3707],{6981:(e,a,s)=>{s.r(a),s.d(a,{assets:()=>o,contentTitle:()=>t,default:()=>c,frontMatter:()=>n,metadata:()=>l,toc:()=>m});var r=s(4848),i=s(8453);const n={tags:["algorithm","algorithm/greedy","data-structure/graph"]},t="Dijkstra's algorithm",l={id:"engineering/algorithms/graph/dijkstra",title:"Dijkstra's algorithm",description:"Dijkstra's algorithm is a greedy algorithm that can be used to find, in a graph, the shortest path from a chosen vertices among all the other vertices.",source:"@site/docs/engineering/algorithms/graph/dijkstra.md",sourceDirName:"engineering/algorithms/graph",slug:"/engineering/algorithms/graph/dijkstra",permalink:"/notebook/engineering/algorithms/graph/dijkstra",draft:!1,unlisted:!1,editUrl:"https://github.com/satche/notebook/tree/main/docs/engineering/algorithms/graph/dijkstra.md",tags:[{inline:!0,label:"algorithm",permalink:"/notebook/tags/algorithm"},{inline:!0,label:"algorithm/greedy",permalink:"/notebook/tags/algorithm-greedy"},{inline:!0,label:"data-structure/graph",permalink:"/notebook/tags/data-structure-graph"}],version:"current",lastUpdatedAt:1721721519e3,frontMatter:{tags:["algorithm","algorithm/greedy","data-structure/graph"]},sidebar:"engineeringSidebar",previous:{title:"Bellman-Ford algorithm",permalink:"/notebook/engineering/algorithms/graph/bellman-ford"},next:{title:"Floyd-Warshall algorithm",permalink:"/notebook/engineering/algorithms/graph/floyd-warshall"}},o={},m=[{value:"Complexity",id:"complexity",level:2},{value:"Resources",id:"resources",level:2}];function h(e){const a={a:"a",annotation:"annotation",h1:"h1",h2:"h2",header:"header",li:"li",math:"math",mi:"mi",mo:"mo",mrow:"mrow",p:"p",semantics:"semantics",span:"span",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.header,{children:(0,r.jsx)(a.h1,{id:"dijkstras-algorithm",children:"Dijkstra's algorithm"})}),"\n",(0,r.jsxs)(a.p,{children:[(0,r.jsx)(a.a,{href:"https://en.wikipedia.org/wiki/Dijkstra%27s_algorithm",children:"Dijkstra's algorithm"})," is a ",(0,r.jsx)(a.a,{href:"/notebook/engineering/algorithms/#Terminology",children:"greedy"})," algorithm that can be used to find, in a ",(0,r.jsx)(a.a,{href:"/notebook/engineering/data/data-structure/graph",children:"graph"}),", the ",(0,r.jsx)(a.a,{href:"/notebook/engineering/algorithms/problems/shortest-path",children:"shortest path"})," from a chosen vertices among all the other vertices."]}),"\n",(0,r.jsxs)(a.p,{children:["![Animation of Dijkstra's algorithm](../assets/dijkstra.gif '",(0,r.jsx)(a.a,{href:"https://en.wikipedia.org/wiki/Dijkstra%27s_algorithm",children:"Dijkstra's algorithm"})," - Wikipedia')"]}),"\n",(0,r.jsx)(a.h2,{id:"complexity",children:"Complexity"}),"\n",(0,r.jsxs)(a.p,{children:[(0,r.jsx)(a.a,{href:"/notebook/engineering/algorithms/complexity",children:"Time complexity"}),": ",(0,r.jsxs)(a.span,{className:"katex",children:[(0,r.jsx)(a.span,{className:"katex-mathml",children:(0,r.jsx)(a.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(a.semantics,{children:[(0,r.jsxs)(a.mrow,{children:[(0,r.jsx)(a.mi,{children:"O"}),(0,r.jsx)(a.mo,{stretchy:"false",children:"("}),(0,r.jsx)(a.mi,{mathvariant:"normal",children:"\u2223"}),(0,r.jsx)(a.mi,{children:"E"}),(0,r.jsx)(a.mi,{mathvariant:"normal",children:"\u2223"}),(0,r.jsx)(a.mo,{children:"+"}),(0,r.jsx)(a.mi,{mathvariant:"normal",children:"\u2223"}),(0,r.jsx)(a.mi,{children:"V"}),(0,r.jsx)(a.mi,{mathvariant:"normal",children:"\u2223"}),(0,r.jsx)(a.mi,{children:"log"}),(0,r.jsx)(a.mo,{children:"\u2061"}),(0,r.jsx)(a.mi,{mathvariant:"normal",children:"\u2223"}),(0,r.jsx)(a.mi,{children:"V"}),(0,r.jsx)(a.mi,{mathvariant:"normal",children:"\u2223"}),(0,r.jsx)(a.mo,{stretchy:"false",children:")"})]}),(0,r.jsx)(a.annotation,{encoding:"application/x-tex",children:"O(|E|+|V|\\log |V|)"})]})})}),(0,r.jsxs)(a.span,{className:"katex-html","aria-hidden":"true",children:[(0,r.jsxs)(a.span,{className:"base",children:[(0,r.jsx)(a.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(a.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,r.jsx)(a.span,{className:"mopen",children:"("}),(0,r.jsx)(a.span,{className:"mord",children:"\u2223"}),(0,r.jsx)(a.span,{className:"mord mathnormal",style:{marginRight:"0.05764em"},children:"E"}),(0,r.jsx)(a.span,{className:"mord",children:"\u2223"}),(0,r.jsx)(a.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,r.jsx)(a.span,{className:"mbin",children:"+"}),(0,r.jsx)(a.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,r.jsxs)(a.span,{className:"base",children:[(0,r.jsx)(a.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(a.span,{className:"mord",children:"\u2223"}),(0,r.jsx)(a.span,{className:"mord mathnormal",style:{marginRight:"0.22222em"},children:"V"}),(0,r.jsx)(a.span,{className:"mord",children:"\u2223"}),(0,r.jsx)(a.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,r.jsxs)(a.span,{className:"mop",children:["lo",(0,r.jsx)(a.span,{style:{marginRight:"0.01389em"},children:"g"})]}),(0,r.jsx)(a.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,r.jsx)(a.span,{className:"mord",children:"\u2223"}),(0,r.jsx)(a.span,{className:"mord mathnormal",style:{marginRight:"0.22222em"},children:"V"}),(0,r.jsx)(a.span,{className:"mord",children:"\u2223"}),(0,r.jsx)(a.span,{className:"mclose",children:")"})]})]})]})]}),"\n",(0,r.jsx)(a.h2,{id:"resources",children:"Resources"}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.a,{href:"https://www.cs.usfca.edu/~galles/visualization/Dijkstra.html",children:"Dijkstra's algorithm visualization"})," \u2013 David Galles"]}),"\n"]})]})}function c(e={}){const{wrapper:a}={...(0,i.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,a,s)=>{s.d(a,{R:()=>t,x:()=>l});var r=s(6540);const i={},n=r.createContext(i);function t(e){const a=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function l(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(n.Provider,{value:a},e.children)}}}]);