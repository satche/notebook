"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[3135],{7255:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>l,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var n=a(4848),r=a(8453);const s={},i="Data structure",o={id:"engineering/data/data-structure/data-structure",title:"Data structure",description:"Data structure state how to organise and manage the data, trying to be as efficient as possible depending of the task. For example, we'll use a certain data structure that will be designed to quickly build a list, but we'll use another one for quick access to elements.",source:"@site/docs/engineering/data/data-structure/data-structure.md",sourceDirName:"engineering/data/data-structure",slug:"/engineering/data/data-structure/",permalink:"/notebook/engineering/data/data-structure/",draft:!1,unlisted:!1,editUrl:"https://github.com/satche/notebook/tree/main/docs/engineering/data/data-structure/data-structure.md",tags:[],version:"current",lastUpdatedAt:1721721519e3,frontMatter:{},sidebar:"engineeringSidebar",previous:{title:"Hamming distance",permalink:"/notebook/engineering/data/binary/hamming-distance"},next:{title:"Graph",permalink:"/notebook/engineering/data/data-structure/graph"}},u={},c=[];function d(e){const t={a:"a",h1:"h1",header:"header",p:"p",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"data-structure",children:"Data structure"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.a,{href:"https://wikipedia.org/wiki/Data_structure",children:"Data structure"})," state how to organise and manage the data, trying to be as efficient as possible depending of the task. For example, we'll use a certain data structure that will be designed to quickly build a list, but we'll use another one for quick access to elements."]})]})}function l(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,t,a)=>{a.d(t,{R:()=>i,x:()=>o});var n=a(6540);const r={},s=n.createContext(r);function i(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);