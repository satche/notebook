"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[6467],{9374:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>d,toc:()=>c});var n=i(4848),r=i(8453);const t={aliases:[],tags:[]},a="Class diagram",d={id:"engineering/architecture/models/uml/structural-diagrams/class-diagram",title:"Class diagram",description:"The class diagram show the system's classes, attributes, methods and relationships. It's mostly used in OOP.",source:"@site/docs/engineering/architecture/models/uml/structural-diagrams/class-diagram.md",sourceDirName:"engineering/architecture/models/uml/structural-diagrams",slug:"/engineering/architecture/models/uml/structural-diagrams/class-diagram",permalink:"/notebook/engineering/architecture/models/uml/structural-diagrams/class-diagram",draft:!1,unlisted:!1,editUrl:"https://github.com/satche/notebook/tree/main/docs/engineering/architecture/models/uml/structural-diagrams/class-diagram.md",tags:[],version:"current",lastUpdatedAt:1721721519e3,frontMatter:{aliases:[],tags:[]},sidebar:"engineeringSidebar",previous:{title:"Use Case diagram",permalink:"/notebook/engineering/architecture/models/uml/behaviour-diagrams/use-case-diagram"},next:{title:"Component diagram",permalink:"/notebook/engineering/architecture/models/uml/structural-diagrams/component-diagram"}},l={},c=[{value:"Notation",id:"notation",level:2},{value:"Defining class",id:"defining-class",level:3},{value:"Visibility",id:"visibility",level:3},{value:"Relationship",id:"relationship",level:3},{value:"Cardinality",id:"cardinality",level:4},{value:"Example",id:"example",level:2},{value:"Resources",id:"resources",level:2}];function o(e){const s={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"class-diagram",children:"Class diagram"})}),"\n",(0,n.jsxs)(s.p,{children:["The ",(0,n.jsx)(s.a,{href:"https://wikipedia.org/wiki/class_diagram",children:"class diagram"})," show the system's classes, attributes, methods and relationships. It's mostly used in ",(0,n.jsx)(s.a,{href:"/notebook/engineering/architecture/paradigms/object-oriented",children:"OOP"}),"."]}),"\n",(0,n.jsx)(s.h2,{id:"notation",children:"Notation"}),"\n",(0,n.jsx)(s.h3,{id:"defining-class",children:"Defining class"}),"\n",(0,n.jsx)(s.p,{children:"You define your class with three sections:"}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Name"}),": Stereotype (e.g ",(0,n.jsx)(s.code,{children:"\xabenum\xbb"}),", ",(0,n.jsx)(s.code,{children:"\xabinterface\xbb"}),"), class name"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Properties"}),": Visibility, property name, data type, cardinality"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Methods"}),": Visibility, method name, parameters, return data type"]}),"\n"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-mermaid",children:"classDiagram\n\tclass Animal {\n\t\t<<interface>>\n\t\t+name: string\n\t\t-dateBirth: date\n\t\t#owner: Human[0..1]\n\t\t+getAge(): int\n\t\t+eat(food: Food): void\n\t}\n"})}),"\n",(0,n.jsx)(s.h3,{id:"visibility",children:"Visibility"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"+public"})," \u2013 Access from any other classes"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"-private"})," \u2013 Access from inside its own classes"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"#protected"})," \u2013 Access from inside its own classes and sub-classes"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"~package"})," \u2013 Access from classes from the same package (default)"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"_static_"})," (underlined) \u2013 Access without instantiating class"]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"relationship",children:"Relationship"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Name"}),(0,n.jsx)(s.th,{children:"Example"}),(0,n.jsx)(s.th,{children:"Explanations"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Association"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"A--B"})}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.code,{children:"A"})," is associated to ",(0,n.jsx)(s.code,{children:"B"})]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Generalization"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"A--\x3eB"})}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.code,{children:"A"})," inherits from ",(0,n.jsx)(s.code,{children:"B"})]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Aggregation"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"A--oB"})}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.code,{children:"A"})," is a ",(0,n.jsx)(s.em,{children:"dependent"})," piece of ",(0,n.jsx)(s.code,{children:"B"})]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Composition"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"A--*B"})}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.code,{children:"A"})," is an ",(0,n.jsx)(s.em,{children:"independent"})," piece of ",(0,n.jsx)(s.code,{children:"B"})]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Realization"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"A..>B"})}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.code,{children:"A"})," inherits from interface ",(0,n.jsx)(s.code,{children:"B"})]})]})]})]}),"\n",(0,n.jsxs)(s.p,{children:["Read more: ",(0,n.jsx)(s.a,{href:"/notebook/engineering/architecture/paradigms/object-oriented#relations",children:"Relations in OOP"})]}),"\n",(0,n.jsx)(s.h4,{id:"cardinality",children:"Cardinality"}),"\n",(0,n.jsxs)(s.p,{children:["Also called multiplicity, ",(0,n.jsx)(s.a,{href:"https://wikipedia.org/wiki/cardinality_(data_modeling)",children:"cardinality"})," indicates how many instances of a class can be present in another class."]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"One-to-one"}),": ",(0,n.jsx)(s.code,{children:"A 1--1 B"})]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"One-to-many"}),": ",(0,n.jsx)(s.code,{children:"A *--1 B"})]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Many-to-many"}),": ",(0,n.jsx)(s.code,{children:"A *--* B"})]}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:["We can also specified more precises numbers or define ranges:\n",(0,n.jsx)(s.code,{children:"0..1"}),", ",(0,n.jsx)(s.code,{children:"0..*"}),", ",(0,n.jsx)(s.code,{children:"1..n"}),", etc."]}),"\n",(0,n.jsx)(s.h2,{id:"example",children:"Example"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.img,{src:"https://www.uml-diagrams.org/class-diagrams/class-diagram-domain-overview.png",alt:"Class diagram example"})}),"\n",(0,n.jsx)(s.h2,{id:"resources",children:"Resources"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.a,{href:"https://www.uml-diagrams.org/class-diagrams-overview.html",children:"Class and Object Diagrams Overview"})," \u2013 UML diagrams"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.a,{href:"https://mermaid.js.org/syntax/classdiagram.html",children:"Class diagrams syntax"})," \u2013 Mermaid modeling language"]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(o,{...e})}):o(e)}},8453:(e,s,i)=>{i.d(s,{R:()=>a,x:()=>d});var n=i(6540);const r={},t=n.createContext(r);function a(e){const s=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),n.createElement(t.Provider,{value:s},e.children)}}}]);