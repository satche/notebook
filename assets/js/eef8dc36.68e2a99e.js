"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[2915],{2580:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>m});var a=n(4848),i=n(8453);const t={tags:["algorithm","algorithm/problem"]},l="P vs. NP problem",r={id:"engineering/algorithms/problems/p-vs-np",title:"P vs. NP problem",description:"The P vs. NP problem asks is it's possible to finding a solution to a problem as quickly it is to verify it. P and NP refers to the complexity classes of these problems.",source:"@site/docs/engineering/algorithms/problems/p-vs-np.md",sourceDirName:"engineering/algorithms/problems",slug:"/engineering/algorithms/problems/p-vs-np",permalink:"/notebook/engineering/algorithms/problems/p-vs-np",draft:!1,unlisted:!1,editUrl:"https://github.com/satche/notebook/tree/main/docs/engineering/algorithms/problems/p-vs-np.md",tags:[{inline:!0,label:"algorithm",permalink:"/notebook/tags/algorithm"},{inline:!0,label:"algorithm/problem",permalink:"/notebook/tags/algorithm-problem"}],version:"current",lastUpdatedAt:1721721519e3,frontMatter:{tags:["algorithm","algorithm/problem"]},sidebar:"engineeringSidebar",previous:{title:"Knapsack problem",permalink:"/notebook/engineering/algorithms/problems/knapsack"},next:{title:"Quadratic Assignment Problem",permalink:"/notebook/engineering/algorithms/problems/quadratic-assignment"}},o={},m=[];function c(e){const s={a:"a",annotation:"annotation",em:"em",h1:"h1",math:"math",mi:"mi",mo:"mo",mrow:"mrow",p:"p",semantics:"semantics",span:"span",strong:"strong",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.h1,{id:"p-vs-np-problem",children:"P vs. NP problem"}),"\n",(0,a.jsxs)(s.p,{children:["The ",(0,a.jsx)(s.a,{href:"https://en.wikipedia.org/wiki/P_versus_NP_problem",children:"P vs. NP problem"})," asks is it's possible to finding a solution to a problem as quickly it is to verify it. ",(0,a.jsx)(s.em,{children:"P"})," and ",(0,a.jsx)(s.em,{children:"NP"})," refers to the ",(0,a.jsx)(s.a,{href:"/notebook/engineering/algorithms/complexity#Complexity%20classes",children:"complexity classes"})," of these problems."]}),"\n",(0,a.jsxs)(s.p,{children:["P vs. NP is one of the seven ",(0,a.jsx)(s.a,{href:"/notebook/#Millennium%20Prize%20Problems",children:"Millennium Prize Problems"}),"."]}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"The question"}),"\nDoes every problem that can be quickly checked (NP) can also be quickly solved (P) ?\nIf you can efficiently ",(0,a.jsx)(s.em,{children:"verify"})," an answer, can you also efficiently ",(0,a.jsx)(s.em,{children:"find"})," the answer in the first place?"]}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"The answer"}),"\nWe don't know the answer yet. There is 2 possible scenarios."]}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsxs)(s.span,{className:"katex",children:[(0,a.jsx)(s.span,{className:"katex-mathml",children:(0,a.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(s.semantics,{children:[(0,a.jsxs)(s.mrow,{children:[(0,a.jsx)(s.mi,{children:"P"}),(0,a.jsx)(s.mo,{children:"="}),(0,a.jsx)(s.mi,{children:"N"}),(0,a.jsx)(s.mi,{children:"P"})]}),(0,a.jsx)(s.annotation,{encoding:"application/x-tex",children:"P=NP"})]})})}),(0,a.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"0.6833em"}}),(0,a.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.13889em"},children:"P"}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,a.jsx)(s.span,{className:"mrel",children:"="}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"0.6833em"}}),(0,a.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.13889em"},children:"NP"})]})]})]}),"\nIt means that all problems for which we can check solutions in polynomial time can also be solved with the same time complexity."]}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsxs)(s.span,{className:"katex",children:[(0,a.jsx)(s.span,{className:"katex-mathml",children:(0,a.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(s.semantics,{children:[(0,a.jsxs)(s.mrow,{children:[(0,a.jsx)(s.mi,{children:"P"}),(0,a.jsx)(s.mo,{mathvariant:"normal",children:"\u2260"}),(0,a.jsx)(s.mi,{children:"N"}),(0,a.jsx)(s.mi,{children:"P"})]}),(0,a.jsx)(s.annotation,{encoding:"application/x-tex",children:"P \u2260 NP"})]})})}),(0,a.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"0.8889em",verticalAlign:"-0.1944em"}}),(0,a.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.13889em"},children:"P"}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,a.jsxs)(s.span,{className:"mrel",children:[(0,a.jsx)(s.span,{className:"mrel",children:(0,a.jsx)(s.span,{className:"mord vbox",children:(0,a.jsx)(s.span,{className:"thinbox",children:(0,a.jsxs)(s.span,{className:"rlap",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"0.8889em",verticalAlign:"-0.1944em"}}),(0,a.jsx)(s.span,{className:"inner",children:(0,a.jsx)(s.span,{className:"mord",children:(0,a.jsx)(s.span,{className:"mrel",children:"\ue020"})})}),(0,a.jsx)(s.span,{className:"fix"})]})})})}),(0,a.jsx)(s.span,{className:"mrel",children:"="})]}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"0.6833em"}}),(0,a.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.13889em"},children:"NP"})]})]})]}),"\nIt means there are problems where checking solutions require polynomial time, but finding solutions is inherently more complex."]})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>l,x:()=>r});var a=n(6540);const i={},t=a.createContext(i);function l(e){const s=a.useContext(t);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),a.createElement(t.Provider,{value:s},e.children)}}}]);