"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[1343],{3650:e=>{e.exports=JSON.parse('{"tag":{"label":"algorithm/problem","permalink":"/notebook/tags/algorithm-problem","allTagsPath":"/notebook/tags","count":8,"items":[{"id":"engineering/algorithms/problems/csp","title":"Constraint Satisfaction Problem","description":"Constraint Satisfaction Problem (CSP)","permalink":"/notebook/engineering/algorithms/problems/csp"},{"id":"engineering/algorithms/problems/flow","title":"Flow cost problem","description":"We try to find the minimum or maximum flow among a graph.","permalink":"/notebook/engineering/algorithms/problems/flow"},{"id":"engineering/algorithms/problems/graph-coloring","title":"Graph coloring problem","description":"Graph coloring problems include the coloring (or labeling) of vertices in a graph.","permalink":"/notebook/engineering/algorithms/problems/graph-coloring"},{"id":"engineering/algorithms/problems/knapsack","title":"Knapsack problem","description":"The knapsack problem is a combinatorial optimization problem, used in resource allocation. It can concern for example: minimal waste in material cutting, selection of investements, cryoptgraphy, etc.","permalink":"/notebook/engineering/algorithms/problems/knapsack"},{"id":"engineering/algorithms/problems/p-vs-np","title":"P vs. NP problem","description":"The P vs. NP problem asks is it\'s possible to finding a solution to a problem as quickly it is to verify it. P and NP refers to the complexity classes of these problems.","permalink":"/notebook/engineering/algorithms/problems/p-vs-np"},{"id":"engineering/algorithms/problems/shortest-path","title":"Shortest path problem","description":"The shortest path problem try to find a path in a graph cover the less distance. For that, the weights of the chosen edges should be as small as possible.","permalink":"/notebook/engineering/algorithms/problems/shortest-path"},{"id":"engineering/algorithms/problems/steiner-tree","title":"Steiner tree problem","description":"Steiner tree problem can be see to the mix between a Minimum Spanning Tree problem and a shortest path problem. It tries to find the shortest network between the vertices of a graph.","permalink":"/notebook/engineering/algorithms/problems/steiner-tree"},{"id":"engineering/algorithms/problems/traveling-salesman","title":"Traveling Salesman Problen","description":"The Traveling Salesman Problem (TSP) needs to find the shortest possible route for a salesman to visit each city exactly one time and returns to the starting point.","permalink":"/notebook/engineering/algorithms/problems/traveling-salesman"}],"unlisted":false}}')}}]);