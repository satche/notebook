"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[8624],{9651:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>o});var i=n(4848),a=n(8453);const s={},r="Flutter",l={id:"code/frameworks/flutter",title:"Flutter",description:"Flutter is a Dart framework to build mobile and desktop application from a single codebase.",source:"@site/docs/code/frameworks/flutter.md",sourceDirName:"code/frameworks",slug:"/code/frameworks/flutter",permalink:"/notebook/code/frameworks/flutter",draft:!1,unlisted:!1,editUrl:"https://github.com/satche/notebook/tree/main/docs/code/frameworks/flutter.md",tags:[],version:"current",lastUpdatedAt:1721721519e3,frontMatter:{},sidebar:"codeSidebar",previous:{title:"Python",permalink:"/notebook/code/languages/python"},next:{title:"BLoC",permalink:"/notebook/code/libraries/bloc"}},d={},o=[{value:"Getting started",id:"getting-started",level:2},{value:"Installation",id:"installation",level:3},{value:"Initialization",id:"initialization",level:3},{value:"Widgets",id:"widgets",level:2},{value:"Stateless",id:"stateless",level:3},{value:"Statefull",id:"statefull",level:3},{value:"State management",id:"state-management",level:2},{value:"Lift state up",id:"lift-state-up",level:3},{value:"Inherited",id:"inherited",level:3},{value:"Provider",id:"provider",level:3},{value:"Routes",id:"routes",level:2},{value:"Navigation 1.0",id:"navigation-10",level:3},{value:"Anonymous routes",id:"anonymous-routes",level:4},{value:"Named routes",id:"named-routes",level:4},{value:"Parameters routes",id:"parameters-routes",level:4},{value:"Pass arguments",id:"pass-arguments",level:4},{value:"Navigation 2.0",id:"navigation-20",level:3},{value:"Packages &amp; Modules",id:"packages--modules",level:2},{value:"Resources",id:"resources",level:2},{value:"Documentation",id:"documentation",level:3},{value:"Packages",id:"packages",level:3},{value:"Tutorials",id:"tutorials",level:3}];function c(e){const t={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"flutter",children:"Flutter"})}),"\n",(0,i.jsxs)(t.p,{children:["Flutter is a ",(0,i.jsx)(t.a,{href:"/notebook/code/languages/dart",children:"Dart"})," framework to build mobile and desktop application from a single codebase."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-dart",children:"import 'package:flutter/material.dart';\n\nvoid main() {\n\trunApp(const MyApp());\n}\n\nclass MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(home: Text(\"Hello World\"));\n  }\n}\n"})}),"\n",(0,i.jsx)(t.h2,{id:"getting-started",children:"Getting started"}),"\n",(0,i.jsx)(t.h3,{id:"installation",children:"Installation"}),"\n",(0,i.jsxs)(t.p,{children:["Since installation procedures may vary across different platforms (Windows, OSX, Linux), it is best to refer to the official documentation for guidance: ",(0,i.jsx)(t.a,{href:"https://docs.flutter.dev/get-started/install",children:"Flutter installation"})]}),"\n",(0,i.jsxs)(t.p,{children:["It\u2019s recommended to also ",(0,i.jsx)(t.a,{href:"https://docs.flutter.dev/get-started/editor?tab=vscode",children:"install the IDE Flutter plugins"})," for a better experience"]}),"\n",(0,i.jsx)(t.h3,{id:"initialization",children:"Initialization"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"$ flutter create <project-name>\n$ cd <project-name>\n$ flutter run\n"})}),"\n",(0,i.jsxs)(t.p,{children:["You can have a list of running devices with the ",(0,i.jsx)(t.code,{children:"flutter devices"})," command. You also can have a diagnostic with ",(0,i.jsx)(t.code,{children:"flutter doctor"})," command."]}),"\n",(0,i.jsx)(t.h2,{id:"widgets",children:"Widgets"}),"\n",(0,i.jsx)(t.p,{children:"Widgets describes the configuration of an Element, like a blueprint. They are structured in the Widget tree, which can be rebuilt if there is changes."}),"\n",(0,i.jsxs)(t.p,{children:["Flutter website provides a useful ",(0,i.jsx)(t.a,{href:"https://docs.flutter.dev/development/ui/widgets",children:"Widget catalog"}),"."]}),"\n",(0,i.jsx)(t.h3,{id:"stateless",children:"Stateless"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"StatlessWidget"})," are immutables: their properties can\u2019t change one initialized."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-dart",children:"class Name extends StatelessWidget {\n  final String name;\n\tconst Name(this.name);\n\n  @override\n  Widget build(BuildContext context) {\n    return Text(name);\n  }\n}\n"})}),"\n",(0,i.jsx)(t.h3,{id:"statefull",children:"Statefull"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"StatefullWidget"})," maintains state that can change during the lifetime of the widget"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-dart",children:'// Init the Stateful Widget\nclass Counter extends StatefulWidget {\n  @override\n  _CounterState createState() => _CounterState();\n}\n\n// Define the state component\nclass _CounterState extends State<Counter> {\n  int _count = 0;\n\n  void _changeValue() {\n    setState(() { _count++; });\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    // Display the state and the button to change it\n    return GestureDetector(\n      onTap: _changeValue,\n      child: Text("$_count"),\n    );\n  }\n}\n'})}),"\n",(0,i.jsx)(t.h2,{id:"state-management",children:"State management"}),"\n",(0,i.jsxs)(t.p,{children:["In Flutter, the views always reflects the ",(0,i.jsx)(t.em,{children:"Global State"})," of the app: changing state triggers a redraw of the user interface (",(0,i.jsx)(t.em,{children:"UI State"}),"). Because of that, changing widget with a method is hard."]}),"\n",(0,i.jsxs)(t.p,{children:["You can check the ",(0,i.jsx)(t.a,{href:"/notebook/code/libraries/bloc",children:"BLoC"})," library for better state management."]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://docs.flutter.dev/data-and-backend/state-mgmt/options",children:"State management approches"})," \u2013 Flutter doc"]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"lift-state-up",children:"Lift state up"}),"\n",(0,i.jsx)(t.p,{children:"Use models to update and display current state's widget"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-dart",children:"void tapHandler(BuildContext context) {  \n\tvar userModel = getUserModel(context);\n\tuserModel.add(name);\n}\n"})}),"\n",(0,i.jsx)(t.h3,{id:"inherited",children:"Inherited"}),"\n",(0,i.jsxs)(t.p,{children:["Use ",(0,i.jsx)(t.code,{children:"InheritedWidget"})," to efficiently pass data to children widgets. Keep in mind the class is immutable, which means you can't use ",(0,i.jsx)(t.code,{children:"<Class>.of(context).value = newValue"}),"."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-dart",children:"class User extends InheritedWidget {\n  final String name;\n\n  // Constructor\n  User({required this.name, required Widget child}) : super(child: child);\n\n  // Inherited widget access method\n  static User of(BuildContext context) {\n    return context.dependOnInheritedWidgetOfExactType<User>()!;\n  }\n\n  @override\n  // Method to update widget tree when the inherited widget is changed\n  bool updateShouldNotify(InheritedWidget oldWidget) => name != oldWidget.name;\n}\n"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://api.flutter.dev/flutter/widgets/inheritedwidget-class.html",children:"InheritedWidget class"})," \u2013 Flutter API"]}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://dartpad.dev/workshops.html?webserver=https://dartpad-workshops-io2021.web.app/inherited_widget&utm_source=google-io21&utm_medium=referral&utm_campaign=io21-resources",children:"Interactive Dartpad example"})}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://gist.github.com/satche/922d37113860453e3335f2340e6e3529",children:"Inherited Gist example"})," \u2013 Github"]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"provider",children:"Provider"}),"\n",(0,i.jsx)(t.p,{children:"Provider package is a general state for all the application, like the items added in a cart shop."}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"ChangeNotifier"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Class that can notify change."}),"\n",(0,i.jsx)(t.li,{children:"Act like a watcher or observable."}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"notifyListeners"})," method send notification every time it's called."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"ChangeNotifierProvider"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Provide ",(0,i.jsx)(t.code,{children:"ChangeNotifier"})," instances to descendants with ",(0,i.jsx)(t.code,{children:"child"})]}),"\n",(0,i.jsx)(t.li,{children:"Must be placed above widgets that need to access to it\u2026"}),"\n",(0,i.jsx)(t.li,{children:"\u2026 but as low than possible in the structure of the application."}),"\n",(0,i.jsxs)(t.li,{children:["Use ",(0,i.jsx)(t.code,{children:"MultiProvider"})," to provide to more than one class"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"Consumer"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Specify with notifier to access."}),"\n",(0,i.jsx)(t.li,{children:"Place it as deep in the tree as possible to avoid rebuilding unchanged portions of UI."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"Provider.of"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"If you want to call a method without getting data"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://pub.dev/packages/provider",children:"pub.dev/packages/provider"}),"\xa0\u2013 Provider package"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://docs.flutter.dev/data-and-backend/state-mgmt/simple",children:"Simple app state management"})," \u2013 Flutter doc"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/flutter/samples/tree/main/provider_shopper",children:"Provider shopper example"}),"\xa0\u2013 Github"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://gist.github.com/satche/4d2da5bb9a17b709756e911474191218",children:"Provider gist example"})," \u2013 Github"]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"routes",children:"Routes"}),"\n",(0,i.jsx)(t.h3,{id:"navigation-10",children:"Navigation 1.0"}),"\n",(0,i.jsx)(t.p,{children:"Navigation 1.0 is imperative: each screen handle the navigation to the next one."}),"\n",(0,i.jsx)(t.h4,{id:"anonymous-routes",children:"Anonymous routes"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"Navigator.push()"})," allow to \u201cpush\u201d a view on front of the current one."]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"Navigator.pop()"})," remove that view, showing the previous one."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-dart",children:"FlatButton(\n  onPressed: () {\n    Navigator.push(\n      context,\n      MaterialPageRoute(builder: (context) {\n        return NextView(); // View (widget) to push\n      },\n    ),\n  },\n);\n//\u2026\nFlatButton(\n  onPressed: () {\n    Navigator.pop(context); // Return to previous view\n  },\n);\n"})}),"\n",(0,i.jsx)(t.h4,{id:"named-routes",children:"Named routes"}),"\n",(0,i.jsxs)(t.p,{children:["You can name your routes by calling the ",(0,i.jsx)(t.code,{children:"routes"})," parameter in ",(0,i.jsx)(t.code,{children:"MaterialApp"})," and calling ",(0,i.jsx)(t.code,{children:"Navigator.pushNamed"})]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-dart",children:"MaterialApp(\n  routes: {\n    '/': (context) => HomeScreen(),\n  }\n)\n//\xa0\u2026\nFlatButton(\n  onPressed: () {\n    Navigator.pushNamed(context, '/'); // Push named view\n  },\n);\n\n"})}),"\n",(0,i.jsx)(t.h4,{id:"parameters-routes",children:"Parameters routes"}),"\n",(0,i.jsxs)(t.p,{children:["You can have more control on named route with the ",(0,i.jsx)(t.code,{children:"onGenerateRoute"})," parameter. Use the ",(0,i.jsx)(t.a,{href:"https://devdocs.io/dart~2/dart-core/uri-class",children:"Uri class"})," to manipulate path. You can simulate route parameters with it."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-dart",children:"// Handle '/users/:id'\nonGeneratedRoute: (settings) {\n  var uri = Uri.parse(settings.name);\n  if (uri.pathSegments.length == 2 &&\n      uri.pathSegments.first == 'user') {\n    var id = uri.pathSegments[1];\n    return MaterialPageRoute(builder: (context) => UserScreen(id: id));\n  }\n}\n"})}),"\n",(0,i.jsx)(t.h4,{id:"pass-arguments",children:"Pass arguments"}),"\n",(0,i.jsx)(t.p,{children:"You can pass arguments from one route to another, so it\u2019s not uri-dependant."}),"\n",(0,i.jsx)(t.p,{children:"First, you have to precise the arguments you want to receive from the previous route."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-dart",children:'class UserArguments {\n  final String name;\n  UserArguments(this.name);\n}\n\nclass UserView {\n  // \u2026\n  @override\n  Widget build(BuildContext context) {\n     final args = ModalRoute.of(context)!.settings.arguments\n        as UserArguments;\n\n     return Text("name: ${args.name}");\n  }\n}\n'})}),"\n",(0,i.jsx)(t.p,{children:"Then, you can define in the previous route the argument to pass"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-dart",children:"FlatButton(\n  onPressed: () {\n    Navigator.pushNamed(\n      context,\n      '/user',\n      arguments: UserView(\"Alice\")\n    );\n  },\n);\n"})}),"\n",(0,i.jsx)(t.h3,{id:"navigation-20",children:"Navigation 2.0"}),"\n",(0,i.jsx)(t.p,{children:"Navigation 2.0 is declarative: external classes handle which screen to display. It\u2019s more complex and solid than Navigation 1.0"}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsxs)(t.p,{children:["I didn\u2019t write any documentation about Navigation 2.0 yet. But you can have a look at it with the following ",(0,i.jsx)(t.a,{href:"https://medium.com/flutter/learning-flutters-new-navigation-and-routing-system-7c9068155ade",children:"Medium article"}),", published by Flutter."]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"packages--modules",children:"Packages & Modules"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"$ flutter pub add <package-name> #\xa0add package (add line in pubspec.yaml)\n$ flutter pub get                # get packages from pubspec.yaml \n"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-dart",children:"import 'package:<package-name>/<package-name>.dart' // Import package\n"})}),"\n",(0,i.jsx)(t.h2,{id:"resources",children:"Resources"}),"\n",(0,i.jsx)(t.h3,{id:"documentation",children:"Documentation"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/flutter/flutter",children:"github.com/flutter/flutter"})," \u2013 Github repo"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://flutter.dev",children:"flutter.dev"})," \u2013 Official website"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://pub.dev/",children:"pub.dev"})," \u2013 Package repo"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://flutlab.io/editor",children:"flutlab.io/editor"})," \u2013 Online editor"]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"packages",children:"Packages"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://firebase.flutter.dev/",children:"firebase.flutter.dev"})," \u2013 Official Firebase package"]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"tutorials",children:"Tutorials"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://codelabs.developers.google.com/codelabs/flutter-codelab-first",children:"Your first Flutter app"}),"\xa0\u2013 Google Codelabs"]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>l});var i=n(6540);const a={},s=i.createContext(a);function r(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);